{"ast":null,"code":"import _objectSpread from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/src/components/scraperForm.jsx\";\nimport React, { Component } from \"react\";\nimport http from \"../services/httpService\";\nimport config from \"../config.json\";\nimport { toast } from \"react-toastify\";\nimport AliasedInput from \"./aliasedInput.jsx\";\nimport SkillsGrid from \"./skillsGrid\";\nimport InputList from \"./inputList.jsx\";\nimport Input from \"./input.jsx\";\n\nvar shortid = require(\"shortid\");\n\nvar ScraperForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ScraperForm, _Component);\n\n  function ScraperForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ScraperForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ScraperForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      jobName: \"\",\n      jobAliases: \"\",\n      skills: {},\n      aliases: {}\n    };\n\n    _this.handleChange = function (e) {\n      var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      console.log(\"here we are in handleChange\");\n      var _e$currentTarget = e.currentTarget,\n          name = _e$currentTarget.name,\n          value = _e$currentTarget.value;\n      console.log(\"name \", name, \" value \", value, \" id \", id);\n\n      if (id === null) {\n        console.log(\"updating based on just name\");\n\n        _this.setState(_defineProperty({}, name, value));\n      } else {\n        console.log(\"updating based on name and id\");\n        var temp = _this.state[name];\n        temp[id] = value;\n\n        _this.setState(_defineProperty({}, name, temp));\n      }\n    };\n\n    _this.handleCreateSkill = function () {\n      var id = shortid.generate();\n\n      var skills = _objectSpread({}, _this.state.skills);\n\n      var aliases = _objectSpread({}, _this.state.aliases);\n\n      skills[id] = \"\";\n      aliases[id] = \"\";\n\n      _this.setState({\n        skills: skills,\n        aliases: aliases\n      });\n    };\n\n    _this.handleDeleteSkill = function (id) {\n      var skills = _objectSpread({}, _this.state.skills);\n\n      var aliases = _objectSpread({}, _this.state.aliases);\n\n      delete skills[id];\n      delete aliases[id];\n\n      _this.setState({\n        skills: skills,\n        aliases: aliases\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ScraperForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          jobName = _this$state.jobName,\n          jobAliases = _this$state.jobAliases,\n          skills = _this$state.skills,\n          aliases = _this$state.aliases;\n      var helperFunctions = {\n        handleChange: this.handleChange\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Job title\"), React.createElement(Input, {\n        label: \"Job title\",\n        name: \"jobName\",\n        value: jobName,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e);\n        },\n        margin: \"\",\n        size: \"form-control-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(InputList, {\n        values: jobAliases,\n        name: \"jobAliases\",\n        id: null,\n        helperFunctions: helperFunctions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Skills\"), React.createElement(SkillsGrid, {\n        skills: skills,\n        aliases: aliases,\n        skillsName: \"skills\",\n        aliasesName: \"aliases\",\n        helperFunctions: helperFunctions,\n        numCols: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleCreateSkill,\n        className: \"btn-lg btn-success mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"+\"), \" \"));\n    }\n  }]);\n\n  return ScraperForm;\n}(Component);\n\nexport default ScraperForm;","map":{"version":3,"sources":["/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/src/components/scraperForm.jsx"],"names":["React","Component","http","config","toast","AliasedInput","SkillsGrid","InputList","Input","shortid","require","ScraperForm","state","jobName","jobAliases","skills","aliases","handleChange","e","id","console","log","currentTarget","name","value","setState","temp","handleCreateSkill","generate","handleDeleteSkill","helperFunctions"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport http from \"../services/httpService\";\nimport config from \"../config.json\";\nimport { toast } from \"react-toastify\";\nimport AliasedInput from \"./aliasedInput.jsx\";\nimport SkillsGrid from \"./skillsGrid\";\nimport InputList from \"./inputList.jsx\";\nimport Input from \"./input.jsx\";\nconst shortid = require(\"shortid\");\n\nclass ScraperForm extends Component {\n  state = {\n    jobName: \"\",\n    jobAliases: \"\",\n    skills: {},\n    aliases: {}\n  };\n\n  // handlePost = async e => {\n  //   console.log(\"handle post triggered\");\n  //   e.preventDefault();\n\n  //   const originalJob = this.state.job;\n\n  //   try {\n  //     await http.post(\n  //       config.scraperServerAPIEndpoint + \"/api/scraper\",\n  //       this.state.job\n  //     );\n  //   } catch (ex) {\n  //     toast.error(\"conection error TODO: fix this message\");\n  //     this.setState({ job: originalJob });\n  //   }\n  // };\n\n\n\n  handleChange = (e, id = null) => {\n    console.log(\"here we are in handleChange\");\n    const { name, value } = e.currentTarget;\n\n    console.log(\"name \", name, \" value \", value, \" id \", id);\n    if (id === null) {\n      console.log(\"updating based on just name\")\n      this.setState({ [name]: value });\n    } else {\n      console.log(\"updating based on name and id\");\n      let temp = this.state[name];\n      temp[id] = value;\n      this.setState({ [name]: temp });\n    }\n  };\n\n\n\n  handleCreateSkill = () => {\n    const id = shortid.generate();\n    let skills = { ...this.state.skills };\n    let aliases = { ...this.state.aliases };\n    skills[id] = \"\";\n    aliases[id] = \"\";\n    this.setState({ skills: skills, aliases: aliases });\n  };\n\n  handleDeleteSkill = (id) => {\n    let skills = { ...this.state.skills };\n    let aliases = { ...this.state.aliases };\n    delete skills[id];\n    delete aliases[id];\n    this.setState({ skills: skills, aliases: aliases });\n  }\n\n\n\n  render() {\n    const { jobName, jobAliases, skills, aliases } = this.state;\n    const helperFunctions = {\n      handleChange: this.handleChange\n    };\n\n    return (\n      <div>\n        <h3 className=\"mt-5\">Job title</h3>\n        <Input\n          label=\"Job title\"\n          name=\"jobName\"\n          value={jobName}\n          onChange={e => this.handleChange(e)}\n          margin=\"\"\n          size={\"form-control-lg\"}\n        />\n        <InputList\n          values={jobAliases}\n          name=\"jobAliases\"\n          id={null}\n          helperFunctions={helperFunctions}\n        />\n\n        <div>\n        <h3 className=\"mt-5\">Skills</h3>\n          <SkillsGrid\n            skills={skills}\n            aliases={aliases}\n            skillsName=\"skills\"\n            aliasesName=\"aliases\"\n            helperFunctions={helperFunctions}\n            numCols={3}\n          />\n          <button\n            onClick={this.handleCreateSkill}\n            className=\"btn-lg btn-success mt-3\"\n          >\n            +\n          </button>{\" \"}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ScraperForm;\n"]},"metadata":{},"sourceType":"module"}