{"ast":null,"code":"var _jsxFileName = \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/src/components/skillsGrid.jsx\";\nimport React, { Component } from \"react\";\nimport AliasedInput from \"./aliasedInput.jsx\";\nimport SkillInput from \"./skillInput.jsx\";\n\nvar SkillsGrid = function SkillsGrid(_ref) {\n  var skills = _ref.skills,\n      handleSkillTitleChange = _ref.handleSkillTitleChange,\n      handleSkillAliasChange = _ref.handleSkillAliasChange,\n      handleDelete = _ref.handleDelete,\n      handleClear = _ref.handleClear,\n      numCols = _ref.numCols;\n  cols = [0, 1, 2];\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, cols.map(function (key) {\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \" \", Object.keys(skills).map(function (key, i) {\n      if (i % 3 != 0) {\n        return;\n      }\n\n      return React.createElement(SkillInput, {\n        key: key,\n        titleLabel: \"Skill\",\n        name: key,\n        title: skills[key].title,\n        aliases: skills[key].aliases,\n        handleTitleChange: handleSkillTitleChange,\n        handleAliasChange: handleSkillAliasChange,\n        handleDelete: handleDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      });\n    })));\n  }));\n};\n\n{\n  /* <div className=\"col-lg\">\n   {\" \"}\n   {Object.keys(skills).map((key, i) => {\n     if (i % 3 != 1) {\n       return;\n     }\n     return (\n       <SkillInput\n         key={key}\n         titleLabel=\"Skill\"\n         name={key}\n         title={skills[key].title}\n         aliases={skills[key].aliases}\n         handleTitleChange={handleSkillTitleChange}\n         handleAliasChange={handleSkillAliasChange}\n       />\n     );\n   })}\n  </div> */\n}\n{\n  /* <div className=\"col-lg\">\n   {\" \"}\n   {Object.keys(skills).map((key, i) => {\n     if (i % 3 != 2) {\n       return;\n     }\n     return (\n       <SkillInput\n         key={key}\n         titleLabel=\"Skill\"\n         name={key}\n         title={skills[key].title}\n         aliases={skills[key].aliases}\n         handleTitleChange={handleSkillTitleChange}\n         handleAliasChange={handleSkillAliasChange}\n       />\n     );\n   })}\n  </div> */\n}\n{\n  /* </div> */\n}\n{\n  /* // </div> */\n}\n{\n  /* //   );\n  // }; */\n}\nexport default SkillsGrid;","map":{"version":3,"sources":["/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/src/components/skillsGrid.jsx"],"names":["React","Component","AliasedInput","SkillInput","SkillsGrid","skills","handleSkillTitleChange","handleSkillAliasChange","handleDelete","handleClear","numCols","cols","map","key","Object","keys","i","title","aliases"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAOb;AAAA,MANJC,MAMI,QANJA,MAMI;AAAA,MALJC,sBAKI,QALJA,sBAKI;AAAA,MAJJC,sBAII,QAJJA,sBAII;AAAA,MAHJC,YAGI,QAHJA,YAGI;AAAA,MAFJC,WAEI,QAFJA,WAEI;AAAA,MADJC,OACI,QADJA,OACI;AACFC,EAAAA,IAAI,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAP;AACF,SAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,IAAI,CAACC,GAAL,CAAU,UAAAC,GAAG,EAAI;AACf,WAGF;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAEGC,MAAM,CAACC,IAAP,CAAYV,MAAZ,EAAoBO,GAApB,CAAwB,UAACC,GAAD,EAAMG,CAAN,EAAY;AACnC,UAAIA,CAAC,GAAG,CAAJ,IAAS,CAAb,EAAgB;AACd;AACD;;AACD,aACE,oBAAC,UAAD;AACE,QAAA,GAAG,EAAEH,GADP;AAEE,QAAA,UAAU,EAAC,OAFb;AAGE,QAAA,IAAI,EAAEA,GAHR;AAIE,QAAA,KAAK,EAAER,MAAM,CAACQ,GAAD,CAAN,CAAYI,KAJrB;AAKE,QAAA,OAAO,EAAEZ,MAAM,CAACQ,GAAD,CAAN,CAAYK,OALvB;AAME,QAAA,iBAAiB,EAAEZ,sBANrB;AAOE,QAAA,iBAAiB,EAAEC,sBAPrB;AAQE,QAAA,YAAY,EAAEC,YARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAYD,KAhBA,CAFH,CADF,CAHE;AAyBQ,GA1BV,CADF,CAFF;AA+BE,CAxCJ;;AA2CQ;AAAC;;;;;;;;;;;;;;;;;;;AAkBS;AAEV;AAAC;;;;;;;;;;;;;;;;;;;AAkBS;AACZ;AAAC;AAAa;AAChB;AAAC;AAAgB;AACrB;AAAC;;AACQ;AAET,eAAeJ,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport AliasedInput from \"./aliasedInput.jsx\";\nimport SkillInput from \"./skillInput.jsx\";\n\nconst SkillsGrid = ({\n  skills,\n  handleSkillTitleChange,\n  handleSkillAliasChange,\n  handleDelete,\n  handleClear,\n  numCols\n}) => {\n    cols = [0, 1, 2]\n  return (\n      \n    <div className=\"container\">\n    { cols.map( key => {\n        return(\n\n\n      <div className=\"row\">\n        <div className=\"col-lg\">\n          {\" \"}\n          {Object.keys(skills).map((key, i) => {\n            if (i % 3 != 0) {\n              return;\n            }\n            return (\n              <SkillInput\n                key={key}\n                titleLabel=\"Skill\"\n                name={key}\n                title={skills[key].title}\n                aliases={skills[key].aliases}\n                handleTitleChange={handleSkillTitleChange}\n                handleAliasChange={handleSkillAliasChange}\n                handleDelete={handleDelete}\n              />\n            );\n          })}\n          \n        </div>\n        </div>)})}\n        </div>\n  )}\n        \n\n        {/* <div className=\"col-lg\">\n          {\" \"}\n          {Object.keys(skills).map((key, i) => {\n            if (i % 3 != 1) {\n              return;\n            }\n            return (\n              <SkillInput\n                key={key}\n                titleLabel=\"Skill\"\n                name={key}\n                title={skills[key].title}\n                aliases={skills[key].aliases}\n                handleTitleChange={handleSkillTitleChange}\n                handleAliasChange={handleSkillAliasChange}\n              />\n            );\n          })}\n        </div> */}\n\n        {/* <div className=\"col-lg\">\n          {\" \"}\n          {Object.keys(skills).map((key, i) => {\n            if (i % 3 != 2) {\n              return;\n            }\n            return (\n              <SkillInput\n                key={key}\n                titleLabel=\"Skill\"\n                name={key}\n                title={skills[key].title}\n                aliases={skills[key].aliases}\n                handleTitleChange={handleSkillTitleChange}\n                handleAliasChange={handleSkillAliasChange}\n              />\n            );\n          })}\n        </div> */}\n      {/* </div> */}\n    {/* // </div> */}\n{/* //   );\n// }; */}\n\nexport default SkillsGrid;\n"]},"metadata":{},"sourceType":"module"}