{"ast":null,"code":"import _objectSpread from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/src/components/scraperForm.jsx\";\nimport React, { Component } from \"react\";\nimport http from \"../services/httpService\";\nimport config from \"../config.json\";\nimport { toast } from \"react-toastify\";\nimport AliasedInput from \"./aliasedInput.jsx\";\nimport SkillsGrid from \"./skillsGrid\";\n\nvar shortid = require(\"shortid\"); // redux experiment\n\n\nvar ScraperForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ScraperForm, _Component);\n\n  function ScraperForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ScraperForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ScraperForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      jobName: \"\",\n      jobAliases: [],\n      skills: {},\n      errors: {}\n    };\n\n    _this.handlePost =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var originalJob;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(\"handle post triggered\");\n                e.preventDefault();\n                originalJob = _this.state.job;\n                _context.prev = 3;\n                _context.next = 6;\n                return http.post(config.scraperServerAPIEndpoint + \"/api/scraper\", _this.state.job);\n\n              case 6:\n                _context.next = 12;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](3);\n                toast.error(\"conection error TODO: fix this message\");\n\n                _this.setState({\n                  job: originalJob\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[3, 8]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleJobAliasChange = function (_ref2) {\n      var input = _ref2.currentTarget;\n\n      _this.setState({\n        jobAliases: input.value.split(\",\")\n      });\n    };\n\n    _this.handleTitleChange = function (_ref3) {\n      var input = _ref3.currentTarget;\n\n      _this.setState({\n        jobName: input.value\n      });\n    };\n\n    _this.handleSkillTitleChange = function (_ref4) {\n      var input = _ref4.currentTarget;\n\n      var skills = _objectSpread({}, _this.state.skills);\n\n      skills[input.name].title = input.value;\n\n      _this.setState({\n        skills: skills\n      });\n    };\n\n    _this.handleSkillAliasChange = function (_ref5) {\n      var input = _ref5.currentTarget;\n\n      var skills = _objectSpread({}, _this.state.skills);\n\n      var aliases = input.value.split(\",\");\n      skills[input.name].aliases = aliases;\n\n      _this.setState({\n        skills: skills\n      });\n    };\n\n    _this.handleDelete = function (id) {\n      var skills = _objectSpread({}, _this.state.skills);\n\n      delete skills[id];\n\n      _this.setState({\n        skills: skills\n      });\n    };\n\n    _this.handleClear = function (id) {\n      var skills = _objectSpread({}, _this.state.skills);\n\n      skills[id].title = \"\";\n      skills[id].aliases = [];\n\n      _this.setState({\n        skills: skills\n      });\n    };\n\n    _this.handleCreate = function () {\n      var id = shortid.generate();\n\n      var skills = _objectSpread({}, _this.state.skills);\n\n      skills[id] = {\n        title: \"\",\n        aliases: []\n      };\n\n      _this.setState({\n        skills: skills\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ScraperForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          jobName = _this$state.jobName,\n          jobAliases = _this$state.jobAliases,\n          skills = _this$state.skills;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"test\",\n        autoComplete: \"off\",\n        autoCorrect: \"off\",\n        spellCheck: \"false\",\n        value: \"7\" // onChange={onChange}\n        ,\n        type: \"text\",\n        className: \"form-control lg m-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        className: \"mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Job title\"), React.createElement(AliasedInput, {\n        titleLabel: \"Job title\",\n        name: \"job-title\",\n        title: jobName,\n        aliases: jobAliases,\n        handleTitleChange: this.handleTitleChange,\n        handleAliasChange: this.handleJobAliasChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Skills\"), React.createElement(SkillsGrid, {\n        skills: skills,\n        handleSkillTitleChange: this.handleSkillTitleChange,\n        handleSkillAliasChange: this.handleSkillAliasChange,\n        handleDelete: this.handleDelete,\n        handleClear: this.handleClear,\n        numCols: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleCreate,\n        className: \"btn-lg btn-success mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"+\")));\n    }\n  }]);\n\n  return ScraperForm;\n}(Component);\n\nexport default ScraperForm;","map":{"version":3,"sources":["/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/src/components/scraperForm.jsx"],"names":["React","Component","http","config","toast","AliasedInput","SkillsGrid","shortid","require","ScraperForm","state","jobName","jobAliases","skills","errors","handlePost","e","console","log","preventDefault","originalJob","job","post","scraperServerAPIEndpoint","error","setState","handleJobAliasChange","input","currentTarget","value","split","handleTitleChange","handleSkillTitleChange","name","title","handleSkillAliasChange","aliases","handleDelete","id","handleClear","handleCreate","generate"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport http from \"../services/httpService\";\nimport config from \"../config.json\";\nimport { toast } from \"react-toastify\";\nimport AliasedInput from \"./aliasedInput.jsx\";\nimport SkillsGrid from \"./skillsGrid\";\nconst shortid = require(\"shortid\");\n// redux experiment\n\nclass ScraperForm extends Component {\n  state = {\n    jobName: \"\",\n    jobAliases: [],\n    skills: {},\n    errors: {}\n  };\n\n  componentDidMount() {}\n\n  handlePost = async e => {\n    console.log(\"handle post triggered\");\n    e.preventDefault();\n\n    const originalJob = this.state.job;\n\n    try {\n      await http.post(\n        config.scraperServerAPIEndpoint + \"/api/scraper\",\n        this.state.job\n      );\n    } catch (ex) {\n      toast.error(\"conection error TODO: fix this message\");\n      this.setState({ job: originalJob });\n    }\n  };\n\n  handleJobAliasChange = ({ currentTarget: input }) => {\n    this.setState({ jobAliases: input.value.split(\",\") });\n  };\n\n  handleTitleChange = ({ currentTarget: input }) => {\n    this.setState({ jobName: input.value });\n  };\n\n  handleSkillTitleChange = ({ currentTarget: input }) => {\n    let skills = { ...this.state.skills };\n    skills[input.name].title = input.value;\n    this.setState({ skills });\n  };\n\n  handleSkillAliasChange = ({ currentTarget: input }) => {\n    let skills = { ...this.state.skills };\n    let aliases = input.value.split(\",\");\n    skills[input.name].aliases = aliases;\n    this.setState({ skills });\n  };\n\n  handleDelete = id => {\n    const skills = { ...this.state.skills };\n    delete skills[id];\n    this.setState({ skills });\n  };\n\n  handleClear = id => {\n    const skills = { ...this.state.skills };\n    skills[id].title = \"\";\n    skills[id].aliases = [];\n    this.setState({ skills });\n  };\n\n  handleCreate = () => {\n    const id = shortid.generate();\n    let skills = { ...this.state.skills };\n    skills[id] = { title: \"\", aliases: [] };\n    this.setState({ skills });\n  };\n\n  render() {\n    const { jobName, jobAliases, skills } = this.state;\n\n    return (\n      <div>\n        <input\n          name=\"test\"\n          autoComplete=\"off\"\n          autoCorrect=\"off\"\n          spellCheck=\"false\"\n          value=\"7\"\n          // onChange={onChange}\n          type=\"text\"\n          className=\"form-control lg m-5\"\n        />\n        <h3 className=\"mt-5\">Job title</h3>\n        <AliasedInput\n          titleLabel=\"Job title\"\n          name=\"job-title\"\n          title={jobName}\n          aliases={jobAliases}\n          handleTitleChange={this.handleTitleChange}\n          handleAliasChange={this.handleJobAliasChange}\n        />\n        <div>\n          <h3 className=\"mt-5\">Skills</h3>\n          <SkillsGrid\n            skills={skills}\n            handleSkillTitleChange={this.handleSkillTitleChange}\n            handleSkillAliasChange={this.handleSkillAliasChange}\n            handleDelete={this.handleDelete}\n            handleClear={this.handleClear}\n            numCols={3}\n          />\n          <button\n            onClick={this.handleCreate}\n            className=\"btn-lg btn-success mt-3\"\n          >\n            +\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ScraperForm;\n"]},"metadata":{},"sourceType":"module"}