{"ast":null,"code":"var _jsxFileName = \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/src/components/skillsGrid.jsx\";\nimport React from \"react\";\nimport InputList from \"./inputList.jsx\";\nimport Input from \"./input.jsx\";\n\nvar SkillsGrid = function SkillsGrid(_ref) {\n  var skills = _ref.skills,\n      aliases = _ref.aliases,\n      skillsName = _ref.skillsName,\n      aliasesName = _ref.aliasesName,\n      helperFunctions = _ref.helperFunctions,\n      numCols = _ref.numCols;\n  var keys = Object.keys(skills),\n      cols = [],\n      rows = [],\n      i = 0,\n      numRows = Math.ceil(keys.length / parseFloat(numCols)),\n      index,\n      nxtKey;\n\n  while (cols.push(i++) < numCols) {}\n\n  while (rows.push(i++) < numRows) {}\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, rows.map(function (row) {\n    return React.createElement(\"div\", {\n      key: row * row,\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, cols.map(function (col) {\n      index = row * numCols + col;\n      nxtKey = keys[index];\n      return React.createElement(\"div\", {\n        key: row + col,\n        className: \"col-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, index >= keys.length ? React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Input, {\n        label: \"Skill \" + (index + 1),\n        id: nxtKey,\n        name: skillsName,\n        value: skills[nxtKey],\n        onChange: function onChange(e) {\n          return helperFunctions.handleChange(e, keys[row * numCols + col]);\n        },\n        margin: \"\",\n        size: \"form-control-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(InputList, {\n        values: aliases[nxtKey],\n        name: aliasesName,\n        id: nxtKey,\n        helperFunctions: helperFunctions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })));\n    }));\n  }));\n};\n\nexport default SkillsGrid;","map":{"version":3,"sources":["/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/src/components/skillsGrid.jsx"],"names":["React","InputList","Input","SkillsGrid","skills","aliases","skillsName","aliasesName","helperFunctions","numCols","keys","Object","cols","rows","i","numRows","Math","ceil","length","parseFloat","index","nxtKey","push","map","row","col","e","handleChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAOb;AAAA,MANJC,MAMI,QANJA,MAMI;AAAA,MALJC,OAKI,QALJA,OAKI;AAAA,MAJJC,UAII,QAJJA,UAII;AAAA,MAHJC,WAGI,QAHJA,WAGI;AAAA,MAFJC,eAEI,QAFJA,eAEI;AAAA,MADJC,OACI,QADJA,OACI;AACJ,MAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYN,MAAZ,CAAX;AAAA,MACIQ,IAAI,GAAG,EADX;AAAA,MAEIC,IAAI,GAAG,EAFX;AAAA,MAGIC,CAAC,GAAG,CAHR;AAAA,MAIIC,OAAO,GAAGC,IAAI,CAACC,IAAL,CAAUP,IAAI,CAACQ,MAAL,GAAcC,UAAU,CAACV,OAAD,CAAlC,CAJd;AAAA,MAKIW,KALJ;AAAA,MAMIC,MANJ;;AAQA,SAAOT,IAAI,CAACU,IAAL,CAAUR,CAAC,EAAX,IAAiBL,OAAxB,EAAiC,CAAE;;AACnC,SAAOI,IAAI,CAACS,IAAL,CAAUR,CAAC,EAAX,IAAiBC,OAAxB,EAAiC,CAAE;;AAEnC,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,CAACU,GAAL,CAAS,UAAAC,GAAG,EAAI;AACf,WACE;AAAK,MAAA,GAAG,EAAEA,GAAG,GAAGA,GAAhB;AAAqB,MAAA,SAAS,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGZ,IAAI,CAACW,GAAL,CAAS,UAAAE,GAAG,EAAI;AACfL,MAAAA,KAAK,GAAGI,GAAG,GAAGf,OAAN,GAAgBgB,GAAxB;AACAJ,MAAAA,MAAM,GAAGX,IAAI,CAACU,KAAD,CAAb;AAEA,aACE;AAAK,QAAA,GAAG,EAAEI,GAAG,GAAGC,GAAhB;AAAqB,QAAA,SAAS,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGL,KAAK,IAAIV,IAAI,CAACQ,MAAd,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAE,YAAYE,KAAK,GAAC,CAAlB,CADT;AAEE,QAAA,EAAE,EAAEC,MAFN;AAGE,QAAA,IAAI,EAAEf,UAHR;AAIE,QAAA,KAAK,EAAEF,MAAM,CAACiB,MAAD,CAJf;AAKE,QAAA,QAAQ,EAAG,kBAACK,CAAD;AAAA,iBAAOlB,eAAe,CAACmB,YAAhB,CAA6BD,CAA7B,EAAgChB,IAAI,CAACc,GAAG,GAAGf,OAAN,GAAgBgB,GAAjB,CAApC,CAAP;AAAA,SALb;AAME,QAAA,MAAM,EAAC,EANT;AAOE,QAAA,IAAI,EAAE,iBAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAUE,oBAAC,SAAD;AACE,QAAA,MAAM,EAAEpB,OAAO,CAACgB,MAAD,CADjB;AAEE,QAAA,IAAI,EAAEd,WAFR;AAGE,QAAA,EAAE,EAAEc,MAHN;AAIE,QAAA,eAAe,EAAEb,eAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,CAJJ,CADF;AAyBD,KA7BA,CADH,CADF;AAkCD,GAnCA,CADH,CADF;AAwCD,CA3DD;;AA6DA,eAAeL,UAAf","sourcesContent":["import React from \"react\";\nimport InputList from \"./inputList.jsx\";\nimport Input from \"./input.jsx\";\n\nconst SkillsGrid = ({\n  skills,\n  aliases,\n  skillsName,\n  aliasesName,\n  helperFunctions,\n  numCols\n}) => {\n  let keys = Object.keys(skills),\n      cols = [],\n      rows = [],\n      i = 0,\n      numRows = Math.ceil(keys.length / parseFloat(numCols)),\n      index,\n      nxtKey;\n\n  while (cols.push(i++) < numCols) {}\n  while (rows.push(i++) < numRows) {}\n\n  return (\n    <div className=\"container\">\n      {rows.map(row => {\n        return (\n          <div key={row * row} className=\"row\">\n            {cols.map(col => {\n              index = row * numCols + col;\n              nxtKey = keys[index];\n\n              return (\n                <div key={row + col} className=\"col-lg\">\n                  {index >= keys.length ? (\n                    <h1 />\n                  ) : (\n                    <div>\n                      <Input\n                        label={\"Skill \" + (index+1)}\n                        id={nxtKey}\n                        name={skillsName}\n                        value={skills[nxtKey]}\n                        onChange={ (e) => helperFunctions.handleChange(e, keys[row * numCols + col])}\n                        margin=\"\"\n                        size={\"form-control-lg\"}\n                      />\n                      <InputList\n                        values={aliases[nxtKey]}\n                        name={aliasesName}\n                        id={nxtKey}\n                        helperFunctions={helperFunctions}\n                      />\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default SkillsGrid;\n"]},"metadata":{},"sourceType":"module"}