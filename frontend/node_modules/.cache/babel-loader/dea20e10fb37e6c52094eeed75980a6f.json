{"ast":null,"code":"import _classCallCheck from \"/Users/JGrundy/Documents/code/data-science-job-search/app/frontend/react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/JGrundy/Documents/code/data-science-job-search/app/frontend/react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/JGrundy/Documents/code/data-science-job-search/app/frontend/react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/JGrundy/Documents/code/data-science-job-search/app/frontend/react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/JGrundy/Documents/code/data-science-job-search/app/frontend/react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/JGrundy/Documents/code/data-science-job-search/app/frontend/react-app/src/components/map.jsx\";\nimport React, { Component } from 'react';\nimport { ComposableMap, ZoomableGroup, Geographies, Geography, Markers, Marker } from \"react-simple-maps\";\nimport { scaleLinear } from \"d3-scale\";\nimport axios from \"axios\";\n\nvar Map =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Map, _Component);\n\n  function Map() {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Map).call(this));\n    _this.state = {\n      // ComposableMap specs\n      width: 1000,\n      height: 450,\n      projection: \"albersUsa\",\n      scale: 160,\n      // ZoomableGroup specs\n      zoom: 1,\n      center: [0, 0],\n      // Geographies specs\n      geographies: \"/usa_topo.json\",\n      // Marker specs\n      rgba: \"rgba(255,87,34,0.8)\",\n      size: \"count\"\n    };\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(ComposableMap, {\n        projection: this.projection,\n        projectionConfig: {\n          scale: this.scale\n        },\n        width: this.width,\n        height: this.height,\n        style: {\n          width: \"100%\",\n          height: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(ZoomableGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Geographies, {\n        geography: process.env.PUBLIC_URL + \"/usa_topo.json\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, function (geographies, projection) {\n        return geographies.map(function (geography, i) {\n          return React.createElement(Geography, {\n            key: i,\n            geography: geography,\n            projection: projection,\n            style: {\n              default: {\n                stroke: \"#607D8B\",\n                strokeWidth: 0.75,\n                outline: \"none\"\n              },\n              hover: {\n                fill: \"#607D8B\",\n                stroke: \"#607D8B\",\n                strokeWidth: 0.75,\n                outline: \"none\"\n              },\n              pressed: {\n                fill: \"#FF5722\",\n                stroke: \"#607D8B\",\n                strokeWidth: 0.75,\n                outline: \"none\"\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          });\n        });\n      }), React.createElement(Markers, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Map;\n}(Component);\n\nexport default Map;","map":{"version":3,"sources":["/Users/JGrundy/Documents/code/data-science-job-search/app/frontend/react-app/src/components/map.jsx"],"names":["React","Component","ComposableMap","ZoomableGroup","Geographies","Geography","Markers","Marker","scaleLinear","axios","Map","state","width","height","projection","scale","zoom","center","geographies","rgba","size","process","env","PUBLIC_URL","map","geography","i","default","stroke","strokeWidth","outline","hover","fill","pressed"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACIC,aADJ,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,SAJJ,EAKIC,OALJ,EAMIC,MANJ,QAOS,mBAPT;AAQA,SAASC,WAAT,QAA4B,UAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAGMC,G;;;;;AACF,iBAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAa;AACT;AACAC,MAAAA,KAAK,EAAE,IAFE;AAGTC,MAAAA,MAAM,EAAE,GAHC;AAITC,MAAAA,UAAU,EAAE,WAJH;AAKTC,MAAAA,KAAK,EAAE,GALE;AAMT;AACAC,MAAAA,IAAI,EAAE,CAPG;AAQTC,MAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CARC;AAST;AACAC,MAAAA,WAAW,EAAE,gBAVJ;AAWT;AACAC,MAAAA,IAAI,EAAE,qBAZG;AAaTC,MAAAA,IAAI,EAAE;AAbG,KAAb;AAFU;AAkBb;;;;6BAGQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,aAAD;AACI,QAAA,UAAU,EAAE,KAAKN,UADrB;AAEI,QAAA,gBAAgB,EAAE;AAClBC,UAAAA,KAAK,EAAE,KAAKA;AADM,SAFtB;AAKI,QAAA,KAAK,EAAE,KAAKH,KALhB;AAMI,QAAA,MAAM,EAAE,KAAKC,MANjB;AAOI,QAAA,KAAK,EAAE;AACPD,UAAAA,KAAK,EAAE,MADA;AAEPC,UAAAA,MAAM,EAAE;AAFD,SAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAYI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AACI,QAAA,SAAS,EAAGQ,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,gBADzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGK,UAACL,WAAD,EAAcJ,UAAd;AAAA,eACGI,WAAW,CAACM,GAAZ,CAAgB,UAACC,SAAD,EAAYC,CAAZ,EAAkB;AAClC,iBACI,oBAAC,SAAD;AACA,YAAA,GAAG,EAAEA,CADL;AAEA,YAAA,SAAS,EAAED,SAFX;AAGA,YAAA,UAAU,EAAEX,UAHZ;AAIA,YAAA,KAAK,EAAE;AACHa,cAAAA,OAAO,EAAE;AACPC,gBAAAA,MAAM,EAAE,SADD;AAEPC,gBAAAA,WAAW,EAAE,IAFN;AAGPC,gBAAAA,OAAO,EAAE;AAHF,eADN;AAMHC,cAAAA,KAAK,EAAE;AACLC,gBAAAA,IAAI,EAAE,SADD;AAELJ,gBAAAA,MAAM,EAAE,SAFH;AAGLC,gBAAAA,WAAW,EAAE,IAHR;AAILC,gBAAAA,OAAO,EAAE;AAJJ,eANJ;AAYHG,cAAAA,OAAO,EAAE;AACPD,gBAAAA,IAAI,EAAE,SADC;AAEPJ,gBAAAA,MAAM,EAAE,SAFD;AAGPC,gBAAAA,WAAW,EAAE,IAHN;AAIPC,gBAAAA,OAAO,EAAE;AAJF;AAZN,aAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA0BC,SA3BD,CADH;AAAA,OAHL,CADJ,EAmCI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnCJ,CAZJ,CADJ,CADJ;AAwDH;;;;EA/Ea7B,S;;AAkFlB,eAAeS,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport {\n    ComposableMap,\n    ZoomableGroup,\n    Geographies,\n    Geography,\n    Markers,\n    Marker,\n  } from \"react-simple-maps\"\nimport { scaleLinear } from \"d3-scale\"\nimport axios from \"axios\"\n\n\nclass Map extends Component {\n    constructor() {\n        super()\n        this.state = {\n            // ComposableMap specs\n            width: 1000,\n            height: 450,\n            projection: \"albersUsa\",\n            scale: 160,\n            // ZoomableGroup specs\n            zoom: 1,\n            center: [0, 0],\n            // Geographies specs\n            geographies: \"/usa_topo.json\",\n            // Marker specs\n            rgba: \"rgba(255,87,34,0.8)\",\n            size: \"count\",\n\n        }\n    }\n\n\n    render() { \n        return (  \n            <div>\n                <ComposableMap\n                    projection={this.projection}\n                    projectionConfig={{\n                    scale: this.scale\n                    }}\n                    width={this.width}\n                    height={this.height}\n                    style={{\n                    width: \"100%\",\n                    height: \"auto\"\n                    }}\n                >\n                    <ZoomableGroup>\n                        <Geographies\n                            geography={ process.env.PUBLIC_URL + \"/usa_topo.json\" }\n                            >\n                            {(geographies, projection) =>\n                                geographies.map((geography, i) => {\n                                return (\n                                    <Geography\n                                    key={i}\n                                    geography={geography}\n                                    projection={projection}\n                                    style={{\n                                        default: {\n                                          stroke: \"#607D8B\",\n                                          strokeWidth: 0.75,\n                                          outline: \"none\"\n                                        },\n                                        hover: {\n                                          fill: \"#607D8B\",\n                                          stroke: \"#607D8B\",\n                                          strokeWidth: 0.75,\n                                          outline: \"none\"\n                                        },\n                                        pressed: {\n                                          fill: \"#FF5722\",\n                                          stroke: \"#607D8B\",\n                                          strokeWidth: 0.75,\n                                          outline: \"none\"\n                                        }\n                                      }}\n                                    />\n                                );\n                                })\n                            }\n                        </Geographies>\n                        <Markers>\n\n                        </Markers>\n                    </ZoomableGroup>\n                </ComposableMap>\n            </div>\n        );\n    }\n}\n \nexport default Map;"]},"metadata":{},"sourceType":"module"}