{"ast":null,"code":"import _objectSpread from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/src/components/scraperForm.jsx\";\nimport React, { Component } from \"react\";\nimport http from \"../services/httpService\";\nimport config from \"../config.json\";\nimport { toast } from \"react-toastify\";\n\nvar Joi = require('joi');\n\nimport SkillsGrid from \"./skillsGrid\";\nimport InputList from \"./inputList.jsx\";\nimport Input from \"./input.jsx\";\n\nvar shortid = require(\"shortid\");\n\nvar ScraperForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ScraperForm, _Component);\n\n  function ScraperForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ScraperForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ScraperForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      jobName: \"\",\n      jobAliases: \"\",\n      skills: {},\n      aliases: {},\n      errors: {}\n    };\n    _this.schema = {\n      jobName: Joi.string().required() // jobAliases: Joi.string().required()\n\n    };\n\n    _this.validate = function () {\n      var options = {\n        abortEarly: false\n      };\n\n      var _Joi$validate = Joi.validate(_this.state.jobName),\n          error = _Joi$validate.error;\n\n      if (!error) return null;\n      var errors = {};\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = error.details[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n          errors[item.path[0]] = item.message;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return errors;\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var errors, originalJob;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(\"handle post triggered\");\n                e.preventDefault();\n                errors = _this.validate();\n\n                _this.setState({\n                  errors: errors || {}\n                });\n\n                if (!errors) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 6:\n                originalJob = _this.state.job;\n                _context.prev = 7;\n                _context.next = 10;\n                return http.post(config.scraperServerAPIEndpoint + \"/api/scraper\", _this.state.job);\n\n              case 10:\n                _context.next = 16;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](7);\n                toast.error(\"conection error TODO: fix this message\");\n\n                _this.setState({\n                  job: originalJob\n                });\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[7, 12]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleChange = function (e) {\n      var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var _e$currentTarget = e.currentTarget,\n          name = _e$currentTarget.name,\n          value = _e$currentTarget.value;\n      console.log(\"current ids \", _this.state.aliases);\n      console.log(\"Updating name \", name, \" value \", value, \" id \", id);\n\n      if (id === null) {\n        console.log(\"updating based on just name\");\n\n        _this.setState(_defineProperty({}, name, value));\n      } else {\n        console.log(\"updating based on name and id\");\n        var temp = _this.state[name];\n        temp[id] = value;\n\n        _this.setState(_defineProperty({}, name, temp));\n      }\n    };\n\n    _this.handleCreateSkill = function () {\n      var id = shortid.generate();\n\n      var skills = _objectSpread({}, _this.state.skills);\n\n      var aliases = _objectSpread({}, _this.state.aliases);\n\n      skills[id] = \"\";\n      aliases[id] = \"\";\n\n      _this.setState({\n        skills: skills,\n        aliases: aliases\n      });\n    };\n\n    _this.handleDeleteSkill = function (id) {\n      console.log(\"deleting id \", id);\n\n      var skills = _objectSpread({}, _this.state.skills);\n\n      var aliases = _objectSpread({}, _this.state.aliases);\n\n      delete skills[id];\n      delete aliases[id];\n\n      _this.setState({\n        skills: skills,\n        aliases: aliases\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ScraperForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          jobName = _this$state.jobName,\n          jobAliases = _this$state.jobAliases,\n          skills = _this$state.skills,\n          aliases = _this$state.aliases;\n      var helperFunctions = {\n        handleChange: this.handleChange,\n        handleDeleteComponent: this.handleDeleteSkill\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Job title\"), React.createElement(Input, {\n        label: \"Job title\",\n        name: \"jobName\",\n        value: jobName,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e);\n        },\n        margin: \"\",\n        size: \"form-control-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(InputList, {\n        values: jobAliases,\n        name: \"jobAliases\",\n        id: null,\n        helperFunctions: helperFunctions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Skills\"), React.createElement(SkillsGrid, {\n        skills: skills,\n        aliases: aliases,\n        skillsName: \"skills\",\n        aliasesName: \"aliases\",\n        helperFunctions: helperFunctions,\n        numCols: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleCreateSkill,\n        className: \"btn-lg btn-success mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Add skill\"), \" \"), React.createElement(\"button\", {\n        onClick: this.handleSubmit,\n        className: \"btn-lg btn-primary mt-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Submit\"));\n    }\n  }]);\n\n  return ScraperForm;\n}(Component);\n\nexport default ScraperForm;","map":{"version":3,"sources":["/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/src/components/scraperForm.jsx"],"names":["React","Component","http","config","toast","Joi","require","SkillsGrid","InputList","Input","shortid","ScraperForm","state","jobName","jobAliases","skills","aliases","errors","schema","string","required","validate","options","abortEarly","error","details","item","path","message","handleSubmit","e","console","log","preventDefault","setState","originalJob","job","post","scraperServerAPIEndpoint","handleChange","id","currentTarget","name","value","temp","handleCreateSkill","generate","handleDeleteSkill","helperFunctions","handleDeleteComponent"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport http from \"../services/httpService\";\nimport config from \"../config.json\";\nimport { toast } from \"react-toastify\";\nconst Joi = require('joi');\nimport SkillsGrid from \"./skillsGrid\";\nimport InputList from \"./inputList.jsx\";\nimport Input from \"./input.jsx\";\nconst shortid = require(\"shortid\");\n\nclass ScraperForm extends Component {\n  state = {\n    jobName: \"\",\n    jobAliases: \"\",\n    skills: {},\n    aliases: {},\n    errors: {}\n  };\n\n  schema = {\n    jobName: Joi.string().required()\n    // jobAliases: Joi.string().required()\n  }\n\n  validate = () => {\n    const options = {abortEarly: false};\n    const { error } = Joi.validate(this.state.jobName);\n    if (!error) return null;\n    const errors = {}\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return(errors);\n  }\n\n  handleSubmit = async e => {\n    console.log(\"handle post triggered\");\n    e.preventDefault();\n\n    const errors = this.validate();\n    this.setState({ errors: errors || {} })\n    if (errors) return;\n\n    const originalJob = this.state.job;\n\n    try {\n      await http.post(\n        config.scraperServerAPIEndpoint + \"/api/scraper\",\n        this.state.job\n      );\n    } catch (ex) {\n      toast.error(\"conection error TODO: fix this message\");\n      this.setState({ job: originalJob });\n    }\n  };\n\n\n  handleChange = (e, id = null) => {\n    const { name, value } = e.currentTarget;\n    console.log(\"current ids \", this.state.aliases);\n    console.log(\"Updating name \", name, \" value \", value, \" id \", id);\n    if (id === null) {\n      console.log(\"updating based on just name\")\n      this.setState({ [name]: value });\n    } else {\n      console.log(\"updating based on name and id\");\n      let temp = this.state[name];\n      temp[id] = value;\n      this.setState({ [name]: temp });\n    }\n  };\n\n  handleCreateSkill = () => {\n    const id = shortid.generate();\n    let skills = { ...this.state.skills };\n    let aliases = { ...this.state.aliases };\n    skills[id] = \"\";\n    aliases[id] = \"\";\n    this.setState({ skills: skills, aliases: aliases });\n  };\n\n  handleDeleteSkill = (id) => {\n    console.log(\"deleting id \", id);\n    let skills = { ...this.state.skills };\n    let aliases = { ...this.state.aliases };\n    delete skills[id];\n    delete aliases[id];\n    this.setState({ skills: skills, aliases: aliases });\n  }\n\n  render() {\n    const { jobName, jobAliases, skills, aliases } = this.state;\n    const helperFunctions = {\n      handleChange: this.handleChange,\n      handleDeleteComponent: this.handleDeleteSkill\n    };\n\n    return (\n      <div>\n        <h3 className=\"mt-5\">Job title</h3>\n        <Input\n          label=\"Job title\"\n          name=\"jobName\"\n          value={jobName}\n          onChange={e => this.handleChange(e)}\n          margin=\"\"\n          size={\"form-control-lg\"}\n        />\n        <InputList\n          values={jobAliases}\n          name=\"jobAliases\"\n          id={null}\n          helperFunctions={helperFunctions}\n        />\n\n        <div>\n        <h3 className=\"mt-5\">Skills</h3>\n          <SkillsGrid\n            skills={skills}\n            aliases={aliases}\n            skillsName=\"skills\"\n            aliasesName=\"aliases\"\n            helperFunctions={helperFunctions}\n            numCols={3}\n          />\n          <button\n            onClick={this.handleCreateSkill}\n            className=\"btn-lg btn-success mt-5\"\n          >\n            Add skill\n          </button>{\" \"}\n        </div>\n        <button onClick={this.handleSubmit} className=\"btn-lg btn-primary mt-1\">Submit</button>\n      </div>\n    );\n  }\n}\n\nexport default ScraperForm;\n"]},"metadata":{},"sourceType":"module"}