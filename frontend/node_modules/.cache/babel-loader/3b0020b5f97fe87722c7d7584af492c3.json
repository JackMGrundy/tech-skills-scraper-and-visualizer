{"ast":null,"code":"import _objectSpread from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/src/components/scraperForm.jsx\";\nimport React, { Component } from \"react\";\nimport http from \"../services/httpService\";\nimport config from \"../config.json\";\nimport { toast } from \"react-toastify\";\nimport AliasedInput from \"./aliasedInput.jsx\";\nimport SkillsGrid from \"./skillsGrid\";\n\nvar shortid = require(\"shortid\");\n\nvar ScraperForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ScraperForm, _Component);\n\n  function ScraperForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ScraperForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ScraperForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: {\n        \"job-title\": {\n          title: \"\",\n          aliases: []\n        },\n        \"1st\": {\n          title: \"\",\n          aliases: []\n        }\n      },\n      jobName: \"\",\n      jobAliases: [],\n      skills: {},\n      errors: {}\n    };\n\n    _this.handleJobAliasChange = function (_ref) {\n      var input = _ref.currentTarget;\n\n      _this.setState({\n        jobAliases: input.value.split(\",\")\n      });\n    };\n\n    _this.handleTitleChange = function (_ref2) {\n      var input = _ref2.currentTarget;\n\n      var data = _objectSpread({}, _this.state.data);\n\n      data[input.name].title = input.value;\n\n      _this.setState({\n        data: data\n      });\n    };\n\n    _this.handleSkillTitleChange = function (_ref3) {\n      var input = _ref3.currentTarget;\n\n      var skills = _objectSpread({}, _this.state.skills);\n\n      skills[input.name].title = input.value;\n\n      _this.setState({\n        skills: skills\n      });\n    };\n\n    _this.handleSkillAliasChange = function (_ref4) {\n      var input = _ref4.currentTarget;\n\n      var skills = _objectSpread({}, _this.state.skills);\n\n      var aliases = input.value.split(\",\");\n      skills[input.name].aliases = aliases;\n\n      _this.setState({\n        skills: skills\n      });\n    };\n\n    _this.handleDelete = function (id) {\n      var skills = _objectSpread({}, _this.state.skills);\n\n      delete skills[id];\n\n      _this.setState({\n        skills: skills\n      });\n    };\n\n    _this.handleClear = function (id) {\n      var skills = _objectSpread({}, _this.state.skills);\n\n      skills[id].title = \"\";\n      skills[id].aliases = [];\n\n      _this.setState({\n        skills: skills\n      });\n    };\n\n    _this.handleCreate = function () {\n      var id = shortid.generate();\n\n      var skills = _objectSpread({}, _this.state.skills);\n\n      skills[id] = {\n        title: \"\",\n        aliases: []\n      };\n\n      _this.setState({\n        skills: skills\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ScraperForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {} // handlePost = async e => {\n    //   console.log(\"handle post triggered\");\n    //   e.preventDefault();\n    //   const originalJob = this.state.job;\n    //   try {\n    //     await http.post(\n    //       config.scraperServerAPIEndpoint + \"/api/scraper\",\n    //       this.state.job\n    //     );\n    //   } catch (ex) {\n    //     toast.error(\"conection error TODO: fix this message\");\n    //     this.setState({ job: originalJob });\n    //   }\n    // };\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          data = _this$state.data,\n          jobName = _this$state.jobName,\n          jobAliases = _this$state.jobAliases,\n          skills = _this$state.skills;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Job title\"), React.createElement(AliasedInput, {\n        titleLabel: \"Job title\",\n        name: \"job-title\",\n        title: data[\"job-title\"].title,\n        aliases: data[\"job-title\"].aliases,\n        handleTitleChange: this.handleTitleChange,\n        handleAliasChange: this.handleJobAliasChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Skills\"), React.createElement(SkillsGrid, {\n        skills: skills,\n        handleSkillTitleChange: this.handleSkillTitleChange,\n        handleSkillAliasChange: this.handleSkillAliasChange,\n        handleDelete: this.handleDelete,\n        handleClear: this.handleClear,\n        numCols: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleCreate,\n        className: \"btn-lg btn-success mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"+\")));\n    }\n  }]);\n\n  return ScraperForm;\n}(Component);\n\nexport default ScraperForm;","map":{"version":3,"sources":["/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/src/components/scraperForm.jsx"],"names":["React","Component","http","config","toast","AliasedInput","SkillsGrid","shortid","require","ScraperForm","state","data","title","aliases","jobName","jobAliases","skills","errors","handleJobAliasChange","input","currentTarget","setState","value","split","handleTitleChange","name","handleSkillTitleChange","handleSkillAliasChange","handleDelete","id","handleClear","handleCreate","generate"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport http from \"../services/httpService\";\nimport config from \"../config.json\";\nimport { toast } from \"react-toastify\";\nimport AliasedInput from \"./aliasedInput.jsx\";\nimport SkillsGrid from \"./skillsGrid\";\nconst shortid = require(\"shortid\");\n\nclass ScraperForm extends Component {\n  state = {\n    data: {\n      \"job-title\": { title: \"\", aliases: [] },\n      \"1st\": { title: \"\", aliases: [] }\n    },\n    jobName: \"\",\n    jobAliases: [],\n    skills: {},\n    errors: {}\n  };\n\n  componentDidMount() {}\n\n  // handlePost = async e => {\n  //   console.log(\"handle post triggered\");\n  //   e.preventDefault();\n\n  //   const originalJob = this.state.job;\n\n  //   try {\n  //     await http.post(\n  //       config.scraperServerAPIEndpoint + \"/api/scraper\",\n  //       this.state.job\n  //     );\n  //   } catch (ex) {\n  //     toast.error(\"conection error TODO: fix this message\");\n  //     this.setState({ job: originalJob });\n  //   }\n  // };\n\n  handleJobAliasChange = ({ currentTarget: input }) => {\n    this.setState({ jobAliases: input.value.split(\",\") });\n  };\n\n  handleTitleChange = ({ currentTarget: input }) => {\n    let data = {...this.state.data };\n    data[input.name].title = input.value;\n    this.setState({ data });\n  };\n\n  handleSkillTitleChange = ({ currentTarget: input }) => {\n    let skills = { ...this.state.skills };\n    skills[input.name].title = input.value;\n    this.setState({ skills });\n  };\n\n  handleSkillAliasChange = ({ currentTarget: input }) => {\n    let skills = { ...this.state.skills };\n    let aliases = input.value.split(\",\");\n    skills[input.name].aliases = aliases;\n    this.setState({ skills });\n  };\n\n  handleDelete = id => {\n    const skills = { ...this.state.skills };\n    delete skills[id];\n    this.setState({ skills });\n  };\n\n  handleClear = id => {\n    const skills = { ...this.state.skills };\n    skills[id].title = \"\";\n    skills[id].aliases = [];\n    this.setState({ skills });\n  };\n\n  handleCreate = () => {\n    const id = shortid.generate();\n    let skills = { ...this.state.skills };\n    skills[id] = { title: \"\", aliases: [] };\n    this.setState({ skills });\n  };\n\n  render() {\n    const { data, jobName, jobAliases, skills } = this.state;\n\n    return (\n      <div>\n        <h3 className=\"mt-5\">Job title</h3>\n        <AliasedInput\n          titleLabel=\"Job title\"\n          name=\"job-title\"\n          title={data[\"job-title\"].title}\n          aliases={data[\"job-title\"].aliases}\n          handleTitleChange={this.handleTitleChange}\n          handleAliasChange={this.handleJobAliasChange}\n\n        />\n        <div>\n          <h3 className=\"mt-5\">Skills</h3>\n          <SkillsGrid\n            skills={skills}\n            handleSkillTitleChange={this.handleSkillTitleChange}\n            handleSkillAliasChange={this.handleSkillAliasChange}\n            handleDelete={this.handleDelete}\n            handleClear={this.handleClear}\n            numCols={3}\n          />\n          <button\n            onClick={this.handleCreate}\n            className=\"btn-lg btn-success mt-3\"\n          >\n            +\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ScraperForm;\n"]},"metadata":{},"sourceType":"module"}