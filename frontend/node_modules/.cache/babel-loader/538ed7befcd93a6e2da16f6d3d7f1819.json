{"ast":null,"code":"import _objectSpread from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/src/components/scraperForm.jsx\";\nimport React, { Component } from \"react\";\nimport http from \"../services/httpService\";\nimport config from \"../config.json\";\nimport { toast } from \"react-toastify\";\nimport Input from \"./input.jsx\";\n\nvar shortid = require('shortid'); // import CsvInput from \"./csvInput.jsx\";\n// import ListOfCSVInputs from \"./listOfCSVInputs\";\n\n\nvar ScraperForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ScraperForm, _Component);\n\n  function ScraperForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ScraperForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ScraperForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      jobName: \"\",\n      jobAliases: [],\n      skills: {},\n      errors: {},\n      titleLabel: \"Skill\",\n      csvLabel: \"Aliases\"\n    };\n\n    _this.handlePost =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var originalJob;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(\"handle post triggered\");\n                e.preventDefault();\n                originalJob = _this.state.job;\n                _context.prev = 3;\n                _context.next = 6;\n                return http.post(config.scraperServerAPIEndpoint + \"/api/scraper\", _this.state.job);\n\n              case 6:\n                _context.next = 12;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](3);\n                toast.error(\"conection error TODO: fix this message\");\n\n                _this.setState({\n                  job: originalJob\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[3, 8]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.testHandle = function () {\n      console.log(_this.state);\n    };\n\n    _this.handleAliasChange = function (_ref2) {\n      var input = _ref2.currentTarget;\n\n      var inputs = _objectSpread({}, _this.state.skills);\n\n      var aliases = input.value.split(\",\"); // aliases = aliases.map(Function.prototype.call, String.prototype.trim);\n\n      inputs[input.name].aliases = aliases;\n\n      _this.setState({\n        inputs: inputs\n      });\n\n      console.log(_this.state.inputs);\n    };\n\n    _this.handleJobAliasChange = function (_ref3) {\n      var input = _ref3.currentTarget;\n\n      _this.setState({\n        jobAliases: input.value.split(\",\")\n      });\n    };\n\n    _this.handleTitleChange = function (_ref4) {\n      var input = _ref4.currentTarget;\n\n      _this.setState({\n        jobName: input.value\n      });\n    };\n\n    _this.handleSkillTitleChange = function (_ref5) {\n      var input = _ref5.currentTarget;\n      console.log(\"ay\");\n    };\n\n    _this.handleSkillAliasChange = function (_ref6) {\n      var input = _ref6.currentTarget;\n      console.log(\"ay\");\n    };\n\n    _this.handleDelete = function (_ref7) {\n      var input = _ref7.currentTarget;\n      console.log(\"ay\");\n    };\n\n    _this.handleClear = function (_ref8) {\n      var input = _ref8.currentTarget;\n      console.log(\"ay\");\n    };\n\n    _this.handleCreate = function (_ref9) {\n      var input = _ref9.currentTarget;\n      var id = shortid.generate();\n\n      var skills = _objectSpread({}, _this.state.skills);\n\n      skills[id] = {\n        title: \"\",\n        aliases: []\n      };\n\n      _this.setState({\n        skills: skills\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ScraperForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var inputs = {\n        id: {\n          title: \"\",\n          aliases: []\n        }\n      };\n      this.setState({\n        inputs: inputs\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          jobName = _this$state.jobName,\n          jobAliases = _this$state.jobAliases,\n          skills = _this$state.skills;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Input, {\n        label: \"Job title\",\n        name: \"0\",\n        value: jobName,\n        onChange: this.handleTitleChange,\n        margin: \"\",\n        size: \"form-control-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(Input, {\n        label: \"Job aliases\",\n        name: \"1\",\n        value: jobAliases,\n        onChange: this.handleJobAliasChange,\n        margin: \"ml-5\",\n        size: \"form-control-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.testHandle,\n        className: \"btn-lg btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, Object.keys(skills).map(function (key) {\n        return React.createElement(\"div\", {\n          key: \"div-\" + key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, React.createElement(Input, {\n          key: key,\n          label: \"Skill\",\n          name: key,\n          value: skills[key].title,\n          onChange: _this2.handleSkillTitleChange,\n          margin: \"\",\n          size: \"form-control-lg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }), React.createElement(Input, {\n          key: key,\n          label: \"Aliases\",\n          name: key,\n          value: skills[key].aliases,\n          onChange: _this2.handleSkillAliasChange,\n          margin: \"ml-5\",\n          size: \"form-control-sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          key: \"btn-del\" + key,\n          onClick: function onClick() {\n            _this2.handleDelete(key);\n          },\n          className: \"btn-sm btn-danger mt-0 ml-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, \"-\"), React.createElement(\"button\", {\n          key: \"btn-clear-\" + key,\n          onClick: function onClick() {\n            return _this2.handleClear(key);\n          },\n          className: \"btn-sm btn-warning mt-3 ml-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, \"Clear\"));\n      }), React.createElement(\"button\", {\n        onClick: this.handleCreate,\n        className: \"btn-lg btn-success mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"+\"))) // <div>\n      //   <h3 className=\"mt-5\">Job title</h3>\n      //   <TitledInputList />\n      //   <p></p>\n      //   <p></p>\n      //   <h3 className=\"mt-5\">Skills</h3>\n      //   <TitledInputList />\n      //   <button onClick={this.handlePost} className=\"btn-lg btn-primary mt-5\">\n      //     Submit job\n      //   </button>\n      // </div>\n      ;\n    }\n  }]);\n\n  return ScraperForm;\n}(Component);\n\nexport default ScraperForm;","map":{"version":3,"sources":["/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/src/components/scraperForm.jsx"],"names":["React","Component","http","config","toast","Input","shortid","require","ScraperForm","state","jobName","jobAliases","skills","errors","titleLabel","csvLabel","handlePost","e","console","log","preventDefault","originalJob","job","post","scraperServerAPIEndpoint","error","setState","testHandle","handleAliasChange","input","currentTarget","inputs","aliases","value","split","name","handleJobAliasChange","handleTitleChange","handleSkillTitleChange","handleSkillAliasChange","handleDelete","handleClear","handleCreate","id","generate","title","Object","keys","map","key"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport http from \"../services/httpService\";\nimport config from \"../config.json\";\nimport { toast } from \"react-toastify\";\nimport Input from \"./input.jsx\";\nconst shortid = require('shortid');\n// import CsvInput from \"./csvInput.jsx\";\n// import ListOfCSVInputs from \"./listOfCSVInputs\";\n\nclass ScraperForm extends Component {\n  state = {\n    jobName: \"\",\n    jobAliases: [],\n    skills: {},\n    errors: {},\n    titleLabel: \"Skill\",\n    csvLabel: \"Aliases\"\n  };\n\n  componentDidMount() {\n    const inputs = {\n      id: { title: \"\", aliases: [] }\n    };\n    this.setState({ inputs });\n  }\n\n  handlePost = async e => {\n    console.log(\"handle post triggered\");\n    e.preventDefault();\n\n    const originalJob = this.state.job;\n\n    try {\n      await http.post(\n        config.scraperServerAPIEndpoint + \"/api/scraper\",\n        this.state.job\n      );\n    } catch (ex) {\n      toast.error(\"conection error TODO: fix this message\");\n      this.setState({ job: originalJob });\n    }\n  };\n\n  testHandle = () => {\n    console.log(this.state);\n  };\n\n  handleAliasChange = ({ currentTarget: input }) => {\n    let inputs = { ...this.state.skills };\n    let aliases = input.value.split(\",\");\n    // aliases = aliases.map(Function.prototype.call, String.prototype.trim);\n    inputs[input.name].aliases = aliases;\n    this.setState({ inputs });\n    console.log(this.state.inputs);\n  };\n\n\n\n  handleJobAliasChange = ({ currentTarget: input }) => {\n    this.setState({ jobAliases: input.value.split(\",\") });\n    \n  };\n\n  handleTitleChange = ({ currentTarget: input }) => {\n    this.setState({ jobName: input.value });\n  };\n\n  handleSkillTitleChange = ({ currentTarget: input }) => {\n    console.log(\"ay\");\n  };\n\n  handleSkillAliasChange = ({ currentTarget: input }) => {\n    console.log(\"ay\");\n  };\n\n  handleDelete = ({ currentTarget: input }) => {\n    console.log(\"ay\");\n  };\n\n  handleClear = ({ currentTarget: input }) => {\n    console.log(\"ay\");\n  };\n\n  handleCreate = ({ currentTarget: input }) => {\n    const id = shortid.generate();\n    let skills = { ...this.state.skills };\n    skills[id] = { title: \"\", aliases: [] };\n    this.setState({ skills });\n  };\n\n\n\n\n  render() {\n    const { jobName, jobAliases, skills } = this.state;\n\n    return (\n      <div>\n        <Input\n          label=\"Job title\"\n          name=\"0\"\n          value={jobName}\n          onChange={this.handleTitleChange}\n          margin=\"\"\n          size={\"form-control-lg\"}\n        />\n      <Input\n        label=\"Job aliases\"\n        name=\"1\"\n        value={jobAliases}\n        onChange={this.handleJobAliasChange}\n        margin=\"ml-5\"\n        size={\"form-control-sm\"}\n      />\n        <button onClick={this.testHandle} className=\"btn-lg btn-primary\" />\n        <div>\n        {Object.keys(skills).map(key => (\n          <div key={\"div-\" + key}>\n            <Input\n              key={key}\n              label=\"Skill\"\n              name={key}\n              value={skills[key].title}\n              onChange={this.handleSkillTitleChange}\n              margin=\"\"\n              size={\"form-control-lg\"}\n            />\n            <Input\n              key={key}\n              label=\"Aliases\"\n              name={key}\n              value={skills[key].aliases}\n              onChange={this.handleSkillAliasChange}\n              margin=\"ml-5\"\n              size={\"form-control-sm\"}\n            />\n\n            <button\n              key={\"btn-del\" + key}\n              onClick={() => {\n                this.handleDelete(key);\n              }}\n              className=\"btn-sm btn-danger mt-0 ml-1\"\n            >\n              -\n            </button>\n            <button\n              key={\"btn-clear-\" + key}\n              onClick={() => this.handleClear(key)}\n              className=\"btn-sm btn-warning mt-3 ml-2\"\n            >\n              Clear\n            </button>\n          </div>\n        ))}\n        <button onClick={this.handleCreate} className=\"btn-lg btn-success mt-3\">\n          +\n        </button>\n      </div>\n\n\n\n        {/* <ListOfCSVInputs\n          // tite=\"a\"\n          // key={key}\n          // name={key}\n          // title={inputs[key].title}\n          // aliases={inputs[key].aliases}\n          titleLabel={titleLabel}\n          csvLabel={csvLabel}\n          // handleTitleChange={this.handleTitleChange}\n          // handleAliasChange={this.handleAliasChange}\n        /> */}\n      </div>\n      // <div>\n      //   <h3 className=\"mt-5\">Job title</h3>\n      //   <TitledInputList />\n      //   <p></p>\n      //   <p></p>\n\n      //   <h3 className=\"mt-5\">Skills</h3>\n      //   <TitledInputList />\n      //   <button onClick={this.handlePost} className=\"btn-lg btn-primary mt-5\">\n      //     Submit job\n      //   </button>\n      // </div>\n    );\n  }\n}\n\nexport default ScraperForm;\n"]},"metadata":{},"sourceType":"module"}