{"ast":null,"code":"import _objectSpread from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/src/components/scraperForm.jsx\";\nimport React, { Component } from \"react\";\nimport http from \"../services/httpService\";\nimport config from \"../config.json\";\nimport { toast } from \"react-toastify\";\nimport SkillsGrid from \"./skillsGrid\";\nimport InputList from \"./inputList.jsx\";\nimport Input from \"./input.jsx\";\n\nvar shortid = require(\"shortid\");\n\nvar Joi = require('joi');\n\nvar ScraperForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ScraperForm, _Component);\n\n  function ScraperForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ScraperForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ScraperForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      jobTitle: \"\",\n      jobAliases: \"\",\n      skills: {},\n      aliases: {},\n      errors: {}\n    };\n    _this.schema = {\n      // Job title cannot be blank\n      jobTitle: Joi.string().required().label(\"Job title\"),\n      jobAliases: Joi.any().label(\"Job aliases\"),\n      skills: Joi.object().pattern(/^/, Joi.string()).label(\"Skills\"),\n      aliases: Joi.object().pattern(/^/, Joi.string()).label(\"Aliases\"),\n      errors: Joi.object()\n    };\n\n    _this.validate = function () {\n      console.log(\"validating\");\n      var options = {\n        abortEarly: false\n      };\n\n      var _Joi$validate = Joi.validate(_this.state, _this.schema, options),\n          error = _Joi$validate.error,\n          value = _Joi$validate.value;\n\n      console.log(value); // return(error);\n      // const { error } = Joi.validate( {jobTitle: this.state.jobTitle}, this.schema, options);\n\n      if (!error) return null;\n      var errors = {};\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = error.details[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n          errors[item.path[0]] = item.message;\n        } // console.log(\"errors\", errors);\n        // return(errors);\n\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var errors, originalJob;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(\"handle post triggered\");\n                e.preventDefault();\n                errors = _this.validate();\n\n                _this.setState({\n                  errors: errors || {}\n                });\n\n                if (!errors) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 6:\n                originalJob = _this.state.job;\n                _context.prev = 7;\n                _context.next = 10;\n                return http.post(config.scraperServerAPIEndpoint + \"/api/scraper\", _this.state.job);\n\n              case 10:\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](7);\n                toast.error(\"conection error TODO: fix this message\"); // this.setState({ job: originalJob });\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[7, 12]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleChange = function (e) {\n      var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var _e$currentTarget = e.currentTarget,\n          name = _e$currentTarget.name,\n          value = _e$currentTarget.value; // console.log(\"current ids \", this.state.aliases);\n      // console.log(\"Updating name \", name, \" value \", value, \" id \", id);\n\n      if (id === null) {\n        // console.log(\"updating based on just name\")\n        _this.setState(_defineProperty({}, name, value));\n      } else {\n        // console.log(\"updating based on name and id\");\n        var temp = _this.state[name];\n        temp[id] = value;\n\n        _this.setState(_defineProperty({}, name, temp));\n      }\n    };\n\n    _this.handleCreateSkill = function () {\n      var id = shortid.generate();\n\n      var skills = _objectSpread({}, _this.state.skills);\n\n      var aliases = _objectSpread({}, _this.state.aliases);\n\n      skills[id] = \"\";\n      aliases[id] = \"\";\n\n      _this.setState({\n        skills: skills,\n        aliases: aliases\n      });\n    };\n\n    _this.handleDeleteSkill = function (id) {\n      console.log(\"deleting id \", id);\n\n      var skills = _objectSpread({}, _this.state.skills);\n\n      var aliases = _objectSpread({}, _this.state.aliases);\n\n      delete skills[id];\n      delete aliases[id];\n\n      _this.setState({\n        skills: skills,\n        aliases: aliases\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ScraperForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          errors = _this$state.errors,\n          jobTitle = _this$state.jobTitle,\n          jobAliases = _this$state.jobAliases,\n          skills = _this$state.skills,\n          aliases = _this$state.aliases;\n      var helperFunctions = {\n        handleChange: this.handleChange,\n        handleDeleteComponent: this.handleDeleteSkill\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Job title\"), React.createElement(Input, {\n        label: \"Job title\",\n        name: \"jobTitle\",\n        value: jobTitle,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e);\n        },\n        margin: \"\",\n        size: \"form-control-lg\",\n        error: errors.jobTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(InputList, {\n        values: jobAliases,\n        name: \"jobAliases\",\n        id: null,\n        helperFunctions: helperFunctions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Skills\"), React.createElement(SkillsGrid, {\n        skills: skills,\n        aliases: aliases,\n        skillsName: \"skills\",\n        aliasesName: \"aliases\",\n        helperFunctions: helperFunctions,\n        numCols: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleCreateSkill,\n        className: \"btn-lg btn-success mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Add skill\"), \" \"), React.createElement(\"button\", {\n        onClick: this.handleSubmit,\n        className: \"btn-lg btn-primary mt-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Submit\"));\n    }\n  }]);\n\n  return ScraperForm;\n}(Component);\n\nexport default ScraperForm;","map":{"version":3,"sources":["/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/src/components/scraperForm.jsx"],"names":["React","Component","http","config","toast","SkillsGrid","InputList","Input","shortid","require","Joi","ScraperForm","state","jobTitle","jobAliases","skills","aliases","errors","schema","string","required","label","any","object","pattern","validate","console","log","options","abortEarly","error","value","details","item","path","message","handleSubmit","e","preventDefault","setState","originalJob","job","post","scraperServerAPIEndpoint","handleChange","id","currentTarget","name","temp","handleCreateSkill","generate","handleDeleteSkill","helperFunctions","handleDeleteComponent"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport http from \"../services/httpService\";\nimport config from \"../config.json\";\nimport { toast } from \"react-toastify\";\nimport SkillsGrid from \"./skillsGrid\";\nimport InputList from \"./inputList.jsx\";\nimport Input from \"./input.jsx\";\nconst shortid = require(\"shortid\");\nconst Joi = require('joi');\n\nclass ScraperForm extends Component {\n  state = {\n    jobTitle: \"\",\n    jobAliases: \"\",\n    skills: {},\n    aliases: {},\n    errors: {}\n  };\n\n  // All escape somehow for security...\n  schema = {\n    // Job title cannot be blank\n    jobTitle: Joi.string().required().label(\"Job title\"),\n    jobAliases: Joi.any().label(\"Job aliases\"),\n    skills: Joi.object().pattern(/^/, Joi.string()).label(\"Skills\"),\n    aliases: Joi.object().pattern(/^/, Joi.string()).label(\"Aliases\"),\n    errors: Joi.object()\n  }\n\n  validate = () => {\n    console.log(\"validating\");\n    const options = {abortEarly: false}; \n    const { error, value } = Joi.validate(this.state, this.schema, options);\n    console.log(value);\n    // return(error);\n\n\n    // const { error } = Joi.validate( {jobTitle: this.state.jobTitle}, this.schema, options);\n    if (!error) return null;\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    // console.log(\"errors\", errors);\n    // return(errors);\n  }\n\n  handleSubmit = async e => {\n    console.log(\"handle post triggered\");\n    e.preventDefault();\n\n    const errors = this.validate();\n    this.setState({ errors: errors || {} })\n    if (errors) return;\n\n    const originalJob = this.state.job;\n\n    try {\n      await http.post(\n        config.scraperServerAPIEndpoint + \"/api/scraper\",\n        this.state.job\n      );\n    } catch (ex) {\n      toast.error(\"conection error TODO: fix this message\");\n      // this.setState({ job: originalJob });\n    }\n  };\n\n\n  handleChange = (e, id = null) => {\n    const { name, value } = e.currentTarget;\n    // console.log(\"current ids \", this.state.aliases);\n    // console.log(\"Updating name \", name, \" value \", value, \" id \", id);\n    if (id === null) {\n      // console.log(\"updating based on just name\")\n      this.setState({ [name]: value });\n    } else {\n      // console.log(\"updating based on name and id\");\n      let temp = this.state[name];\n      temp[id] = value;\n      this.setState({ [name]: temp });\n    }\n  };\n\n  handleCreateSkill = () => {\n    const id = shortid.generate();\n    let skills = { ...this.state.skills };\n    let aliases = { ...this.state.aliases };\n    skills[id] = \"\";\n    aliases[id] = \"\";\n    this.setState({ skills: skills, aliases: aliases });\n  };\n\n  handleDeleteSkill = (id) => {\n    console.log(\"deleting id \", id);\n    let skills = { ...this.state.skills };\n    let aliases = { ...this.state.aliases };\n    delete skills[id];\n    delete aliases[id];\n    this.setState({ skills: skills, aliases: aliases });\n  }\n\n  render() {\n    const { errors, jobTitle, jobAliases, skills, aliases } = this.state;\n    const helperFunctions = {\n      handleChange: this.handleChange,\n      handleDeleteComponent: this.handleDeleteSkill\n    };\n\n    return (\n      <div>\n        <h3 className=\"mt-5\">Job title</h3>\n        <Input\n          label=\"Job title\"\n          name=\"jobTitle\"\n          value={jobTitle}\n          onChange={e => this.handleChange(e)}\n          margin=\"\"\n          size={\"form-control-lg\"}\n          error={errors.jobTitle}\n        />\n        <InputList\n          values={jobAliases}\n          name=\"jobAliases\"\n          id={null}\n          helperFunctions={helperFunctions}\n        />\n\n        <div>\n        <h3 className=\"mt-5\">Skills</h3>\n          <SkillsGrid\n            skills={skills}\n            aliases={aliases}\n            skillsName=\"skills\"\n            aliasesName=\"aliases\"\n            helperFunctions={helperFunctions}\n            numCols={3}\n          />\n          <button\n            onClick={this.handleCreateSkill}\n            className=\"btn-lg btn-success mt-5\"\n          >\n            Add skill\n          </button>{\" \"}\n        </div>\n        <button onClick={this.handleSubmit} className=\"btn-lg btn-primary mt-1\">Submit</button>\n      </div>\n    );\n  }\n}\n\nexport default ScraperForm;\n"]},"metadata":{},"sourceType":"module"}