{"ast":null,"code":"import _objectSpread from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/src/components/scraperForm.jsx\";\nimport React, { Component } from \"react\";\nimport http from \"../services/httpService\";\nimport config from \"../config.json\";\nimport { toast } from \"react-toastify\";\nimport AliasedInput from \"./aliasedInput.jsx\";\nimport SkillsGrid from \"./skillsGrid\";\n\nvar shortid = require(\"shortid\");\n\nvar ScraperForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ScraperForm, _Component);\n\n  function ScraperForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ScraperForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ScraperForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      jobName: \"\",\n      skills: {\n        \"testid\": \"Baking\"\n      }\n    };\n\n    _this.handleJobAliasChange = function (_ref) {\n      var input = _ref.currentTarget;\n\n      _this.setState({\n        jobAliases: input.value.split(\",\")\n      });\n    };\n\n    _this.handleTitleChange = function (e) {\n      var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      console.log(id, e.currentTarget);\n      console.log(e.currentTarget.name, e.currentTarget.value);\n\n      if (id == null) {\n        _this.setState(_defineProperty({}, e.currentTarget.name, [e.currentTarget.value]));\n      } // this.setState({ jobName: input.value });\n\n    };\n\n    _this.handleSkillTitleChange = function (_ref2) {\n      var input = _ref2.currentTarget;\n\n      var skills = _objectSpread({}, _this.state.skills);\n\n      skills[input.name].title = input.value;\n\n      _this.setState({\n        skills: skills\n      });\n    };\n\n    _this.handleSkillAliasChange = function (_ref3) {\n      var input = _ref3.currentTarget;\n\n      var skills = _objectSpread({}, _this.state.skills);\n\n      var aliases = input.value.split(\",\");\n      skills[input.name].aliases = aliases;\n\n      _this.setState({\n        skills: skills\n      });\n    };\n\n    _this.handleDelete = function (id) {\n      var skills = _objectSpread({}, _this.state.skills);\n\n      delete skills[id];\n\n      _this.setState({\n        skills: skills\n      });\n    };\n\n    _this.handleClear = function (id) {\n      var skills = _objectSpread({}, _this.state.skills);\n\n      skills[id].title = \"\";\n      skills[id].aliases = [];\n\n      _this.setState({\n        skills: skills\n      });\n    };\n\n    _this.handleCreate = function () {\n      var id = shortid.generate();\n\n      var skills = _objectSpread({}, _this.state.skills);\n\n      skills[id] = {\n        title: \"\",\n        aliases: []\n      };\n\n      _this.setState({\n        skills: skills\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ScraperForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          jobName = _this$state.jobName,\n          jobAliases = _this$state.jobAliases,\n          skills = _this$state.skills;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Job title\"), React.createElement(AliasedInput, {\n        id: \"testid\",\n        titleLabel: \"Job title\",\n        name: \"jobName\",\n        title: jobName,\n        aliases: this.state.skills[\"testid\"],\n        handleTitleChange: this.handleTitleChange // handleAliasChange={this.handleJobAliasChange}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ScraperForm;\n}(Component);\n\nexport default ScraperForm;","map":{"version":3,"sources":["/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/src/components/scraperForm.jsx"],"names":["React","Component","http","config","toast","AliasedInput","SkillsGrid","shortid","require","ScraperForm","state","jobName","skills","handleJobAliasChange","input","currentTarget","setState","jobAliases","value","split","handleTitleChange","e","id","console","log","name","handleSkillTitleChange","title","handleSkillAliasChange","aliases","handleDelete","handleClear","handleCreate","generate"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport http from \"../services/httpService\";\nimport config from \"../config.json\";\nimport { toast } from \"react-toastify\";\nimport AliasedInput from \"./aliasedInput.jsx\";\nimport SkillsGrid from \"./skillsGrid\";\nconst shortid = require(\"shortid\");\n\nclass ScraperForm extends Component {\n  state = { \n    jobName: \"\",\n    skills: {\n      \"testid\": \"Baking\"\n    }};\n  // state = {\n    // jobName: \"\",\n    // jobAliases: [],\n    // skills: {},\n    // errors: {}\n  // };\n\n  // componentDidMount() {\n  //   // const id = shortid.generate();\n  //   this.setState({ \n  //     jobName: \"\",\n  //     skills: {\n  //       \"testid\": \"Baking\"\n  //     }\n  //   });\n  // }\n\n  // handlePost = async e => {\n  //   console.log(\"handle post triggered\");\n  //   e.preventDefault();\n\n  //   const originalJob = this.state.job;\n\n  //   try {\n  //     await http.post(\n  //       config.scraperServerAPIEndpoint + \"/api/scraper\",\n  //       this.state.job\n  //     );\n  //   } catch (ex) {\n  //     toast.error(\"conection error TODO: fix this message\");\n  //     this.setState({ job: originalJob });\n  //   }\n  // };\n\n  handleJobAliasChange = ({ currentTarget: input }) => {\n    this.setState({ jobAliases: input.value.split(\",\") });\n  };\n\n  handleTitleChange = (e, id=null) => {\n    console.log(id, e.currentTarget);\n    console.log(e.currentTarget.name, e.currentTarget.value);\n    if (id==null) {\n      this.setState( {[e.currentTarget.name]: [e.currentTarget.value] } )\n    }\n    // this.setState({ jobName: input.value });\n  };\n\n  handleSkillTitleChange = ({ currentTarget: input }) => {\n    let skills = { ...this.state.skills };\n    skills[input.name].title = input.value;\n    this.setState({ skills });\n  };\n\n  handleSkillAliasChange = ({ currentTarget: input }) => {\n    let skills = { ...this.state.skills };\n    let aliases = input.value.split(\",\");\n    skills[input.name].aliases = aliases;\n    this.setState({ skills });\n  };\n\n  handleDelete = (id) => {\n    const skills = { ...this.state.skills };\n    delete skills[id];\n    this.setState({ skills });\n  };\n\n  handleClear = id => {\n    const skills = { ...this.state.skills };\n    skills[id].title = \"\";\n    skills[id].aliases = [];\n    this.setState({ skills });\n  };\n\n  handleCreate = () => {\n    const id = shortid.generate();\n    let skills = { ...this.state.skills };\n    skills[id] = { title: \"\", aliases: [] };\n    this.setState({ skills });\n  };\n\n  render() {\n    const { jobName, jobAliases, skills } = this.state;\n\n    return (\n      <div>\n        <h3 className=\"mt-5\">Job title</h3>\n        <AliasedInput\n          id=\"testid\"\n          titleLabel=\"Job title\"\n          name=\"jobName\"\n          title={jobName}\n          aliases={this.state.skills[\"testid\"]}\n          handleTitleChange={this.handleTitleChange}\n          // handleAliasChange={this.handleJobAliasChange}\n\n        />\n        <div>\n          {/* <h3 className=\"mt-5\">Skills</h3>\n          <SkillsGrid\n            skills={skills}\n            handleSkillTitleChange={this.handleSkillTitleChange}\n            handleSkillAliasChange={this.handleSkillAliasChange}\n            handleDelete={this.handleDelete}\n            handleClear={this.handleClear}\n            numCols={3}\n          />\n          <button\n            onClick={this.handleCreate}\n            className=\"btn-lg btn-success mt-3\"\n          >\n            +\n          </button> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ScraperForm;\n"]},"metadata":{},"sourceType":"module"}