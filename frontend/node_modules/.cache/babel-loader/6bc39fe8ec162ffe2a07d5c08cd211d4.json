{"ast":null,"code":"var _jsxFileName = \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/src/components/skillsGrid.jsx\";\nimport React from \"react\";\nimport SkillsColumn from \"./skillsColumn.jsx\";\nimport InputList from \"./inputList.jsx\";\n\nvar SkillsGrid = function SkillsGrid(_ref) {\n  var skills = _ref.skills,\n      aliases = _ref.aliases,\n      skillsName = _ref.skillsName,\n      aliasesName = _ref.aliasesName,\n      handleSkillTitleChange = _ref.handleSkillTitleChange,\n      handleSkillAliasChange = _ref.handleSkillAliasChange,\n      handleDelete = _ref.handleDelete,\n      handleClear = _ref.handleClear,\n      helperFunctions = _ref.helperFunctions,\n      numCols = _ref.numCols;\n  var cols = [];\n  var i = 0;\n\n  while (cols.push(i++) < numCols) {} // let keys = [\"z\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]; //7 keys\n  // let vals = { z: 0, a: 1, b: 2, c: 3, d: 4, e: 5, f: 6, g: 7 };\n\n\n  var keys = Object.keys(skills);\n  var numVals = Object.keys(skills).length;\n  var numRows = Math.ceil(numVals / parseFloat(numCols));\n  var rows = [];\n  i = 0;\n\n  while (rows.push(i++) < numRows) {}\n\n  var index = 0;\n  var nxtKey;\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, rows.map(function (row) {\n    console.log(\"row \", row);\n    return React.createElement(\"div\", {\n      key: row * row,\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, cols.map(function (col) {\n      index = row * numCols + col;\n      nxtKey = keys[index];\n\n      if (index >= keys.length) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        key: row + col,\n        className: \"col-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, skills[nxtKey]), React.createElement(InputList, {\n        values: aliases[nxtKey],\n        name: aliasesName,\n        id: nxtKey,\n        helperFunctions: helperFunctions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }));\n    }));\n  })) // <div className=\"container\">\n  //   <div className=\"row\">\n  //   <div className=\"col-lg\">\n  //   <h1>a</h1>\n  //   </div>\n  //   <div className=\"col-lg\">\n  //   <h1>a</h1>\n  //   </div>\n  //   </div>\n  //   <div className=\"row\">\n  //   <div className=\"col-lg\">\n  //   <h1>a</h1>\n  //   </div>\n  //   <div className=\"col-lg\">\n  //   <h1>a</h1>\n  //   </div>\n  //   </div>\n  //   <div className=\"row\">\n  //   <div className=\"col-lg\">\n  //   <h1>a</h1>\n  //   </div>\n  //   <div className=\"col-lg\">\n  //   <h1>a</h1>\n  //   </div>\n  //   </div>\n  // </div>\n  // <table className=\"table\">\n  //   <tbody>\n  //     {Object.keys(skills).map(function(template_name) {\n  //       return (\n  //         <tr key={template_name}>\n  //           <tr>\n  //             <td>\n  //               <b>Template: {template_name}</b>\n  //             </td>\n  //           </tr>\n  //           {skills[template_name].items.map(function(item) {\n  //             return (\n  //               <tr key={item.id}>\n  //                 <td>{item}</td>\n  //               </tr>\n  //             );\n  //           })}\n  //         </tr>\n  //       );\n  //     })}\n  //   </tbody>\n  // </table>\n  // <div className=\"container\">\n  //   <div className=\"row\">\n  //     {cols.map(col => {\n  //       return (\n  //         <SkillsColumn\n  //           key={col}\n  //           skills={skills}\n  //           aliases={aliases}\n  //           skillsName={skillsName}\n  //           aliasesName={aliasesName}\n  //           // handleSkillTitleChange={handleSkillTitleChange}\n  //           // handleSkillAliasChange={handleSkillAliasChange}\n  //           // handleDelete={handleDelete}\n  //           // handleClear={handleClear}\n  //           numCols={numCols}\n  //           colNum={col}\n  //         />\n  //       );\n  //     })}\n  //   </div>\n  // </div>\n  ;\n};\n\nexport default SkillsGrid;","map":{"version":3,"sources":["/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/src/components/skillsGrid.jsx"],"names":["React","SkillsColumn","InputList","SkillsGrid","skills","aliases","skillsName","aliasesName","handleSkillTitleChange","handleSkillAliasChange","handleDelete","handleClear","helperFunctions","numCols","cols","i","push","keys","Object","numVals","length","numRows","Math","ceil","parseFloat","rows","index","nxtKey","map","row","console","log","col"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAWb;AAAA,MAVJC,MAUI,QAVJA,MAUI;AAAA,MATJC,OASI,QATJA,OASI;AAAA,MARJC,UAQI,QARJA,UAQI;AAAA,MAPJC,WAOI,QAPJA,WAOI;AAAA,MANJC,sBAMI,QANJA,sBAMI;AAAA,MALJC,sBAKI,QALJA,sBAKI;AAAA,MAJJC,YAII,QAJJA,YAII;AAAA,MAHJC,WAGI,QAHJA,WAGI;AAAA,MAFJC,eAEI,QAFJA,eAEI;AAAA,MADJC,OACI,QADJA,OACI;AACJ,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,CAAC,GAAG,CAAR;;AACA,SAAOD,IAAI,CAACE,IAAL,CAAUD,CAAC,EAAX,IAAiBF,OAAxB,EAAiC,CAAE,CAH/B,CAKJ;AACA;;;AACA,MAAII,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYb,MAAZ,CAAX;AACA,MAAIe,OAAO,GAAGD,MAAM,CAACD,IAAP,CAAYb,MAAZ,EAAoBgB,MAAlC;AACA,MAAIC,OAAO,GAAGC,IAAI,CAACC,IAAL,CAAUJ,OAAO,GAAGK,UAAU,CAACX,OAAD,CAA9B,CAAd;AACA,MAAIY,IAAI,GAAG,EAAX;AACAV,EAAAA,CAAC,GAAG,CAAJ;;AACA,SAAOU,IAAI,CAACT,IAAL,CAAUD,CAAC,EAAX,IAAiBM,OAAxB,EAAiC,CAAE;;AAEnC,MAAIK,KAAK,GAAG,CAAZ;AACA,MAAIC,MAAJ;AACA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,CAACG,GAAL,CAAS,UAAAC,GAAG,EAAI;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,GAApB;AACA,WACE;AAAK,MAAA,GAAG,EAAEA,GAAG,GAAGA,GAAhB;AAAqB,MAAA,SAAS,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGf,IAAI,CAACc,GAAL,CAAS,UAAAI,GAAG,EAAI;AACfN,MAAAA,KAAK,GAAGG,GAAG,GAAGhB,OAAN,GAAgBmB,GAAxB;AACAL,MAAAA,MAAM,GAAGV,IAAI,CAACS,KAAD,CAAb;;AACA,UAAIA,KAAK,IAAIT,IAAI,CAACG,MAAlB,EAA0B;AACxB,eAAO,IAAP;AACD;;AACD,aACE;AAAK,QAAA,GAAG,EAAES,GAAG,GAAGG,GAAhB;AAAqB,QAAA,SAAS,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK5B,MAAM,CAACuB,MAAD,CAAX,CADF,EAEE,oBAAC,SAAD;AACE,QAAA,MAAM,EAAEtB,OAAO,CAACsB,MAAD,CADjB;AAEE,QAAA,IAAI,EAAEpB,WAFR;AAGE,QAAA,EAAE,EAAEoB,MAHN;AAIE,QAAA,eAAe,EAAEf,eAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAWD,KAjBA,CADH,CADF;AAsBD,GAxBA,CADH,CADF,CA6BE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvGF;AAyGD,CApID;;AAsIA,eAAeT,UAAf","sourcesContent":["import React from \"react\";\nimport SkillsColumn from \"./skillsColumn.jsx\";\nimport InputList from \"./inputList.jsx\";\n\nconst SkillsGrid = ({\n  skills,\n  aliases,\n  skillsName,\n  aliasesName,\n  handleSkillTitleChange,\n  handleSkillAliasChange,\n  handleDelete,\n  handleClear,\n  helperFunctions,\n  numCols\n}) => {\n  let cols = [];\n  let i = 0;\n  while (cols.push(i++) < numCols) {}\n\n  // let keys = [\"z\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]; //7 keys\n  // let vals = { z: 0, a: 1, b: 2, c: 3, d: 4, e: 5, f: 6, g: 7 };\n  let keys = Object.keys(skills);\n  let numVals = Object.keys(skills).length;\n  let numRows = Math.ceil(numVals / parseFloat(numCols));\n  let rows = [];\n  i = 0;\n  while (rows.push(i++) < numRows) {}\n\n  let index = 0;\n  let nxtKey;\n  return (\n    <div className=\"container\">\n      {rows.map(row => {\n        console.log(\"row \", row);\n        return (\n          <div key={row * row} className=\"row\">\n            {cols.map(col => {\n              index = row * numCols + col;\n              nxtKey = keys[index];\n              if (index >= keys.length) {\n                return null;\n              }\n              return (\n                <div key={row + col} className=\"col-lg\">\n                  <h1>{skills[nxtKey]}</h1>\n                  <InputList\n                    values={aliases[nxtKey]}\n                    name={aliasesName}\n                    id={nxtKey}\n                    helperFunctions={helperFunctions}\n                  />\n                </div>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n\n    // <div className=\"container\">\n    //   <div className=\"row\">\n    //   <div className=\"col-lg\">\n    //   <h1>a</h1>\n    //   </div>\n    //   <div className=\"col-lg\">\n    //   <h1>a</h1>\n    //   </div>\n    //   </div>\n\n    //   <div className=\"row\">\n    //   <div className=\"col-lg\">\n    //   <h1>a</h1>\n    //   </div>\n    //   <div className=\"col-lg\">\n    //   <h1>a</h1>\n    //   </div>\n    //   </div>\n\n    //   <div className=\"row\">\n    //   <div className=\"col-lg\">\n    //   <h1>a</h1>\n    //   </div>\n    //   <div className=\"col-lg\">\n    //   <h1>a</h1>\n    //   </div>\n    //   </div>\n\n    // </div>\n\n    // <table className=\"table\">\n    //   <tbody>\n    //     {Object.keys(skills).map(function(template_name) {\n    //       return (\n    //         <tr key={template_name}>\n    //           <tr>\n    //             <td>\n    //               <b>Template: {template_name}</b>\n    //             </td>\n    //           </tr>\n    //           {skills[template_name].items.map(function(item) {\n    //             return (\n    //               <tr key={item.id}>\n    //                 <td>{item}</td>\n    //               </tr>\n    //             );\n    //           })}\n    //         </tr>\n    //       );\n    //     })}\n    //   </tbody>\n    // </table>\n\n    // <div className=\"container\">\n    //   <div className=\"row\">\n\n    //     {cols.map(col => {\n    //       return (\n    //         <SkillsColumn\n    //           key={col}\n    //           skills={skills}\n    //           aliases={aliases}\n    //           skillsName={skillsName}\n    //           aliasesName={aliasesName}\n    //           // handleSkillTitleChange={handleSkillTitleChange}\n    //           // handleSkillAliasChange={handleSkillAliasChange}\n    //           // handleDelete={handleDelete}\n    //           // handleClear={handleClear}\n    //           numCols={numCols}\n    //           colNum={col}\n    //         />\n    //       );\n    //     })}\n    //   </div>\n    // </div>\n  );\n};\n\nexport default SkillsGrid;\n"]},"metadata":{},"sourceType":"module"}