{"ast":null,"code":"import _objectSpread from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/src/components/scraperForm.jsx\";\nimport React, { Component } from \"react\";\nimport http from \"../services/httpService\";\nimport config from \"../config.json\";\nimport { toast } from \"react-toastify\";\nimport AliasedInput from \"./aliasedInput.jsx\";\nimport SkillsGrid from \"./skillsGrid\";\nimport InputList from \"./inputList.jsx\";\nimport Input from \"./input.jsx\";\n\nvar shortid = require(\"shortid\");\n\nvar ScraperForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ScraperForm, _Component);\n\n  function ScraperForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ScraperForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ScraperForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      jobName: \"\",\n      jobAliases: \"\",\n      skills: {\n        a: \"1\",\n        b: \"2\",\n        c: \"3\"\n      },\n      aliases: {\n        a: \"this,is,cook\",\n        b: \"\",\n        c: \"a,b,c\"\n      }\n    };\n\n    _this.handleChange = function (e) {\n      var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var _e$currentTarget = e.currentTarget,\n          name = _e$currentTarget.name,\n          value = _e$currentTarget.value; // console.log(name);\n      // console.log(value);\n      // console.log(this.state[ [name] ])\n\n      if (id === null) {\n        console.log(name, value);\n\n        _this.setState(_defineProperty({}, name, value));\n      } else {\n        console.log(\"shouldn't be here\");\n        var temp = _this.state[name];\n        temp[id] = value;\n\n        _this.setState(_defineProperty({}, name, temp));\n      }\n    };\n\n    _this.handleDelete = function (val) {\n      console.log(\"hmm\"); // let values = this.state.values.split(\",\");\n      // values = values.map(Function.prototype.call, String.prototype.trim);\n      // let index = values.indexOf(val.trim());\n      // if (index > -1) {\n      //   values.splice(index, 1);\n      // }\n      // this.setState({ values: values.join(\",\") });\n      // console.log(values);\n    };\n\n    _this.handleCreate = function () {\n      var values = _this.state.values == \"\" ? _this.state.newValue.trim() : _this.state.values + \",\" + _this.state.newValue.trim();\n\n      _this.setState({\n        values: values,\n        newValue: \"\"\n      });\n    };\n\n    _this.handleCreateSkill = function () {\n      // let testId = Object.keys(this.state.skills)[0];\n      // console.log(testId);\n      // if (testId!=undefined) {\n      //   this.handleChange(\"ay\", \"skills\", testId);\n      // }\n      // console.log(this.state);\n      var id = shortid.generate();\n\n      var skills = _objectSpread({}, _this.state.skills);\n\n      var aliases = _objectSpread({}, _this.state.aliases);\n\n      skills[id] = \"\";\n      aliases[id] = \"\";\n\n      _this.setState({\n        skills: skills,\n        aliases: aliases\n      });\n    };\n\n    _this.test = function () {\n      console.log(\"here\");\n    };\n\n    return _this;\n  }\n\n  _createClass(ScraperForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          handleChange = _this$state.handleChange,\n          jobName = _this$state.jobName,\n          jobAliases = _this$state.jobAliases,\n          skills = _this$state.skills,\n          aliases = _this$state.aliases;\n      var helperFunctions = {\n        handleDelete: this.handleDelete,\n        handleChange: this.handleChange,\n        test: this.test\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Job title\"), React.createElement(Input, {\n        label: \"Job title\",\n        name: \"jobName\",\n        value: jobName,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e);\n        },\n        margin: \"\",\n        size: \"form-control-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(InputList, {\n        values: jobAliases,\n        name: \"jobAliases\",\n        id: null,\n        helperFunctions: helperFunctions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Skills\"), React.createElement(SkillsGrid, {\n        skills: skills,\n        aliases: aliases,\n        skillsName: \"skills\",\n        aliasesName: \"aliases\",\n        helperFunctions: helperFunctions // handleSkillTitleChange={this.handleSkillTitleChange}\n        // handleSkillAliasChange={this.handleSkillAliasChange}\n        // handleDelete={this.handleDelete}\n        // handleClear={this.handleClear}\n        ,\n        numCols: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleCreateSkill,\n        className: \"btn-lg btn-success mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"+\"), \" \"));\n    }\n  }]);\n\n  return ScraperForm;\n}(Component);\n\nexport default ScraperForm;","map":{"version":3,"sources":["/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/src/components/scraperForm.jsx"],"names":["React","Component","http","config","toast","AliasedInput","SkillsGrid","InputList","Input","shortid","require","ScraperForm","state","jobName","jobAliases","skills","a","b","c","aliases","handleChange","e","id","currentTarget","name","value","console","log","setState","temp","handleDelete","val","handleCreate","values","newValue","trim","handleCreateSkill","generate","test","helperFunctions"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport http from \"../services/httpService\";\nimport config from \"../config.json\";\nimport { toast } from \"react-toastify\";\nimport AliasedInput from \"./aliasedInput.jsx\";\nimport SkillsGrid from \"./skillsGrid\";\nimport InputList from \"./inputList.jsx\";\nimport Input from \"./input.jsx\";\nconst shortid = require(\"shortid\");\n\nclass ScraperForm extends Component {\n  state = {\n    jobName: \"\",\n    jobAliases: \"\",\n    skills: { a: \"1\", b: \"2\", c: \"3\"},\n    aliases: { a: \"this,is,cook\", b: \"\", c: \"a,b,c\"}\n  };\n  // state = {\n  // jobName: \"\",\n  // jobAliases: [],\n  // skills: {},\n  // errors: {}\n  // };\n\n  // componentDidMount() {\n  //   // const id = shortid.generate();\n  //   this.setState({\n  //     jobName: \"\",\n  //     skills: {\n  //       \"testid\": \"Baking\"\n  //     }\n  //   });\n  // }\n\n  // handlePost = async e => {\n  //   console.log(\"handle post triggered\");\n  //   e.preventDefault();\n\n  //   const originalJob = this.state.job;\n\n  //   try {\n  //     await http.post(\n  //       config.scraperServerAPIEndpoint + \"/api/scraper\",\n  //       this.state.job\n  //     );\n  //   } catch (ex) {\n  //     toast.error(\"conection error TODO: fix this message\");\n  //     this.setState({ job: originalJob });\n  //   }\n  // };\n\n  // handleJobAliasChange = ({ currentTarget: input }) => {\n  //   this.setState({ jobAliases: input.value.split(\",\") });\n  // };\n\n  // handleTitleChange = (e, id = null) => {\n  //   console.log(id, e.currentTarget);\n  //   console.log(e.currentTarget.name, e.currentTarget.value);\n  //   if (id == null) {\n  //     this.setState({ [e.currentTarget.name]: [e.currentTarget.value] });\n  //   }\n  //   // this.setState({ jobName: input.value });\n  // };\n\n  // handleSkillTitleChange = ({ currentTarget: input }) => {\n  //   let skills = { ...this.state.skills };\n  //   skills[input.name].title = input.value;\n  //   this.setState({ skills });\n  // };\n\n  // handleSkillAliasChange = ({ currentTarget: input }) => {\n  //   let skills = { ...this.state.skills };\n  //   let aliases = input.value.split(\",\");\n  //   skills[input.name].aliases = aliases;\n  //   this.setState({ skills });\n  // };\n\n  // handleDelete = id => {\n  //   const skills = { ...this.state.skills };\n  //   delete skills[id];\n  //   this.setState({ skills });\n  // };\n\n  // handleClear = id => {\n  //   const skills = { ...this.state.skills };\n  //   skills[id].title = \"\";\n  //   skills[id].aliases = [];\n  //   this.setState({ skills });\n  // };\n\n  // handleCreate = () => {\n  // const id = shortid.generate();\n  // let skills = { ...this.state.skills };\n  // skills[id] = { title: \"\", aliases: [] };\n  // this.setState({ skills });\n  // };\n\n  // inType can be \"text\", \"list\", \"object\"\n  // onchange = ({currentTarget: input}, inType=\"text\", id=null) => {\n\n  // };\n\n  handleChange = (e, id = null) => {\n    const { name, value } = e.currentTarget;\n    // console.log(name);\n    // console.log(value);\n    // console.log(this.state[ [name] ])\n    if (id === null) {\n      console.log(name, value);\n      this.setState({ [name]: value });\n    } else {\n      console.log(\"shouldn't be here\");\n      let temp = this.state[name];\n      temp[id] = value;\n      this.setState({ [name]: temp });\n    }\n  };\n\n  handleDelete = val => {\n    console.log(\"hmm\");\n    // let values = this.state.values.split(\",\");\n    // values = values.map(Function.prototype.call, String.prototype.trim);\n    // let index = values.indexOf(val.trim());\n    // if (index > -1) {\n    //   values.splice(index, 1);\n    // }\n    // this.setState({ values: values.join(\",\") });\n    // console.log(values);\n  };\n\n  handleCreate = () => {\n    let values =\n      this.state.values == \"\"\n        ? this.state.newValue.trim()\n        : this.state.values + \",\" + this.state.newValue.trim();\n    this.setState({ values: values, newValue: \"\" });\n  };\n\n  handleCreateSkill = () => {\n    // let testId = Object.keys(this.state.skills)[0];\n    // console.log(testId);\n    // if (testId!=undefined) {\n    //   this.handleChange(\"ay\", \"skills\", testId);\n    // }\n    // console.log(this.state);\n\n    const id = shortid.generate();\n    let skills = { ...this.state.skills };\n    let aliases = { ...this.state.aliases };\n    skills[id] = \"\";\n    aliases[id] = \"\";\n    this.setState({ skills: skills, aliases: aliases });\n  };\n\n  test = () => {\n    console.log(\"here\");\n  };\n\n  render() {\n    const { handleChange, jobName, jobAliases, skills, aliases } = this.state;\n    const helperFunctions = {\n      handleDelete: this.handleDelete,\n      handleChange: this.handleChange,\n      test: this.test\n    };\n\n    return (\n      <div>\n        <h3 className=\"mt-5\">Job title</h3>\n        <Input\n          label=\"Job title\"\n          name=\"jobName\"\n          value={jobName}\n          onChange={e => this.handleChange(e)}\n          margin=\"\"\n          size={\"form-control-lg\"}\n        />\n        <InputList\n          values={jobAliases}\n          name=\"jobAliases\"\n          id={null}\n          helperFunctions={helperFunctions}\n        />\n\n        <div>\n          <h3 className=\"mt-5\">Skills</h3>\n          {/* {Object.keys(this.state.skills).map(key => {\n            return <h1 key={key}>{key}</h1>;\n          })} */}\n          \n          <SkillsGrid\n            skills={skills}\n            aliases={aliases}\n            skillsName=\"skills\"\n            aliasesName=\"aliases\"\n            helperFunctions={helperFunctions}\n            // handleSkillTitleChange={this.handleSkillTitleChange}\n            // handleSkillAliasChange={this.handleSkillAliasChange}\n            // handleDelete={this.handleDelete}\n            // handleClear={this.handleClear}\n            numCols={3}\n          />\n          <button\n            onClick={this.handleCreateSkill}\n            className=\"btn-lg btn-success mt-3\"\n          >\n            +\n          </button>{\" \"}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ScraperForm;\n"]},"metadata":{},"sourceType":"module"}