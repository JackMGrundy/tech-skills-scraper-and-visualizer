{"ast":null,"code":"import _objectSpread from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/src/components/scraperForm.jsx\";\nimport React, { Component } from \"react\";\nimport http from \"../services/httpService\";\nimport config from \"../config.json\";\nimport { toast } from \"react-toastify\";\nimport Input from \"./inputs.jsx\"; // import CsvInput from \"./csvInput.jsx\";\n// import ListOfCSVInputs from \"./listOfCSVInputs\";\n\nvar ScraperForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ScraperForm, _Component);\n\n  function ScraperForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ScraperForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ScraperForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      jobName: \"\",\n      jobAliases: [],\n      inputs: {},\n      errors: {},\n      titleLabel: \"Skill\",\n      csvLabel: \"Aliases\"\n    };\n\n    _this.handlePost =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var originalJob;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(\"handle post triggered\");\n                e.preventDefault();\n                originalJob = _this.state.job;\n                _context.prev = 3;\n                _context.next = 6;\n                return http.post(config.scraperServerAPIEndpoint + \"/api/scraper\", _this.state.job);\n\n              case 6:\n                _context.next = 12;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](3);\n                toast.error(\"conection error TODO: fix this message\");\n\n                _this.setState({\n                  job: originalJob\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[3, 8]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.testHandle = function () {\n      console.log(_this.state);\n    };\n\n    _this.handleTitleChange = function (_ref2) {\n      var input = _ref2.currentTarget;\n\n      var jobName = _objectSpread({}, _this.state.jobName);\n\n      jobName = input.value;\n\n      _this.setState({\n        jobName: jobName\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ScraperForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var inputs = {\n        id: {\n          title: \"\",\n          aliases: []\n        }\n      };\n      this.setState({\n        inputs: inputs\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var jobName = this.state.jobName;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Input, {\n        label: \"jobTitle\",\n        name: \"0\",\n        value: jobName,\n        onChange: this.handleTitleChange,\n        margin: \"\",\n        size: \"form-control-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.testHandle,\n        className: \"btn-lg btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })) // <div>\n      //   <h3 className=\"mt-5\">Job title</h3>\n      //   <TitledInputList />\n      //   <p></p>\n      //   <p></p>\n      //   <h3 className=\"mt-5\">Skills</h3>\n      //   <TitledInputList />\n      //   <button onClick={this.handlePost} className=\"btn-lg btn-primary mt-5\">\n      //     Submit job\n      //   </button>\n      // </div>\n      ;\n    }\n  }]);\n\n  return ScraperForm;\n}(Component);\n\nexport default ScraperForm;","map":{"version":3,"sources":["/Users/JGrundy/Documents/code/tech-skills-scraper-and-visualizer/frontend/react-app/src/components/scraperForm.jsx"],"names":["React","Component","http","config","toast","Input","ScraperForm","state","jobName","jobAliases","inputs","errors","titleLabel","csvLabel","handlePost","e","console","log","preventDefault","originalJob","job","post","scraperServerAPIEndpoint","error","setState","testHandle","handleTitleChange","input","currentTarget","value","id","title","aliases"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,KAAP,MAAkB,cAAlB,C,CACA;AACA;;IAEMC,W;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE,EADH;AAENC,MAAAA,UAAU,EAAE,EAFN;AAGNC,MAAAA,MAAM,EAAE,EAHF;AAINC,MAAAA,MAAM,EAAE,EAJF;AAKNC,MAAAA,UAAU,EAAE,OALN;AAMNC,MAAAA,QAAQ,EAAE;AANJ,K;;UAgBRC,U;;;;;+BAAa,iBAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,gBAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAF,gBAAAA,CAAC,CAACG,cAAF;AAEMC,gBAAAA,WAJK,GAIS,MAAKZ,KAAL,CAAWa,GAJpB;AAAA;AAAA;AAAA,uBAOHlB,IAAI,CAACmB,IAAL,CACJlB,MAAM,CAACmB,wBAAP,GAAkC,cAD9B,EAEJ,MAAKf,KAAL,CAAWa,GAFP,CAPG;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAYThB,gBAAAA,KAAK,CAACmB,KAAN,CAAY,wCAAZ;;AACA,sBAAKC,QAAL,CAAc;AAAEJ,kBAAAA,GAAG,EAAED;AAAP,iBAAd;;AAbS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;UAiBbM,U,GAAa,YAAM;AACjBT,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKV,KAAjB;AACD,K;;UAEDmB,iB,GAAoB,iBAA8B;AAAA,UAAZC,KAAY,SAA3BC,aAA2B;;AAChD,UAAIpB,OAAO,qBAAQ,MAAKD,KAAL,CAAWC,OAAnB,CAAX;;AACAA,MAAAA,OAAO,GAAGmB,KAAK,CAACE,KAAhB;;AACA,YAAKL,QAAL,CAAc;AAAEhB,QAAAA,OAAO,EAAPA;AAAF,OAAd;AACD,K;;;;;;;wCAhCmB;AAClB,UAAME,MAAM,GAAG;AACboB,QAAAA,EAAE,EAAE;AAAEC,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,OAAO,EAAE;AAAtB;AADS,OAAf;AAGA,WAAKR,QAAL,CAAc;AAAEd,QAAAA,MAAM,EAANA;AAAF,OAAd;AACD;;;6BA6BQ;AAAA,UACCF,OADD,GACY,KAAKD,KADjB,CACCC,OADD;AAGP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAC,UADR;AAEE,QAAA,IAAI,EAAC,GAFP;AAGE,QAAA,KAAK,EAAEA,OAHT;AAIE,QAAA,QAAQ,EAAE,KAAKkB,iBAJjB;AAKE,QAAA,MAAM,EAAC,EALT;AAME,QAAA,IAAI,EAAE,iBANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAUE;AAAQ,QAAA,OAAO,EAAE,KAAKD,UAAtB;AAAkC,QAAA,SAAS,EAAC,oBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,CADF,CAwBE;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAnCF;AAqCD;;;;EApFuBxB,S;;AAuF1B,eAAeK,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport http from \"../services/httpService\";\nimport config from \"../config.json\";\nimport { toast } from \"react-toastify\";\nimport Input from \"./inputs.jsx\";\n// import CsvInput from \"./csvInput.jsx\";\n// import ListOfCSVInputs from \"./listOfCSVInputs\";\n\nclass ScraperForm extends Component {\n  state = {\n    jobName: \"\",\n    jobAliases: [],\n    inputs: {},\n    errors: {},\n    titleLabel: \"Skill\",\n    csvLabel: \"Aliases\"\n  };\n\n  componentDidMount() {\n    const inputs = {\n      id: { title: \"\", aliases: [] }\n    };\n    this.setState({ inputs });\n  }\n\n  handlePost = async e => {\n    console.log(\"handle post triggered\");\n    e.preventDefault();\n\n    const originalJob = this.state.job;\n\n    try {\n      await http.post(\n        config.scraperServerAPIEndpoint + \"/api/scraper\",\n        this.state.job\n      );\n    } catch (ex) {\n      toast.error(\"conection error TODO: fix this message\");\n      this.setState({ job: originalJob });\n    }\n  };\n\n  testHandle = () => {\n    console.log(this.state);\n  };\n\n  handleTitleChange = ({ currentTarget: input }) => {\n    let jobName = { ...this.state.jobName };\n    jobName = input.value;\n    this.setState({ jobName });\n  };\n\n  render() {\n    const { jobName} = this.state;\n\n    return (\n      <div>\n        <Input\n          label=\"jobTitle\"\n          name=\"0\"\n          value={jobName}\n          onChange={this.handleTitleChange}\n          margin=\"\"\n          size={\"form-control-lg\"}\n        />\n\n        <button onClick={this.testHandle} className=\"btn-lg btn-primary\" />\n        {/* <ListOfCSVInputs\n          // tite=\"a\"\n          // key={key}\n          // name={key}\n          // title={inputs[key].title}\n          // aliases={inputs[key].aliases}\n          titleLabel={titleLabel}\n          csvLabel={csvLabel}\n          // handleTitleChange={this.handleTitleChange}\n          // handleAliasChange={this.handleAliasChange}\n        /> */}\n      </div>\n      // <div>\n      //   <h3 className=\"mt-5\">Job title</h3>\n      //   <TitledInputList />\n      //   <p></p>\n      //   <p></p>\n\n      //   <h3 className=\"mt-5\">Skills</h3>\n      //   <TitledInputList />\n      //   <button onClick={this.handlePost} className=\"btn-lg btn-primary mt-5\">\n      //     Submit job\n      //   </button>\n      // </div>\n    );\n  }\n}\n\nexport default ScraperForm;\n"]},"metadata":{},"sourceType":"module"}