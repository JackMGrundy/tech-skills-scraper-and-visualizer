version: '3'

services:

  rabbitmq:
    image: rabbitmq:3.7.4

  mongo:
    image: mongo
    ports:
    - "27017:27017"
    volumes:
    - data-volume:/data/db2

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    working_dir: /usr/src/app
    expose:
      - "8080"
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/usr/src/app
      - ./backend:/app
    environment:
      - MESSAGE_QUEUE=amqp://rabbitmq
      - DATABASE_NAME=indeed
    links:
      - rabbitmq
    depends_on:
    - mongo
    - rabbitmq

  frontend:
    build: ./frontend
    environment:
      - NODE_ENV=development
    expose:
      - "3000"
    ports:
      - '3000:3000'    
    volumes:
      - '${PWD}:/usr/src/app'
      - '/usr/src/app/node_modules'
    links:
      - backend
    command: [ "npm", "start" ]
    depends_on:
    - backend
    - mongo

  worker:
    build: ./scraper
    image: worker
    command: [/bin/sh , ./starter-script.sh]
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672
      - DATABASE_NAME=indeed
      - JOB_KEYS_REGEX="jobKeysWithInfo\[\'([A-Za-z0-9]+)\'\] \="
    expose:
      - "9051"
    ports:
      - '9051:9051' 
    links:
      - backend
    depends_on:
      - rabbitmq
      - backend
    restart: 'no'
    volumes: 
      - ./scraper:/scraper

  # worker2:
  #   build: ./scraper2
  #   image: worker2
  #   command: [/bin/sh , ./starter-script.sh]
  #   environment: 
  #     - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672
  #     - DATABASE_NAME=indeed
  #   expose:
  #     - "9050"
  #   ports:
  #     - '9050:9050' 
  #   links:
  #     - backend
  #   depends_on:
  #     - rabbitmq
  #     - backend
  #   restart: 'no'
  #   volumes: 
  #     - ./scraper2:/scraper2

volumes:
  data-volume:
